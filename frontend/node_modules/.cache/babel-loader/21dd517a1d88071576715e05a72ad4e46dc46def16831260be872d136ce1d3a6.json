{"ast":null,"code":"// File: frontend/src/services/rendezVousService.js\n\nimport api from './api';\n\n// Services pour les rendez-vous (universels actifs/retrait√©s)\nexport const rendezVousService = {\n  // Obtenir les informations de la page de prise de RDV\n  getPageInfo: () => {\n    const userType = localStorage.getItem('user_type');\n    const endpoint = userType === 'retraite' ? '/retraites/rendez-vous' : '/actifs/rendez-vous';\n    return api.get(endpoint);\n  },\n  // Obtenir les cr√©neaux disponibles pour une date\n  getCreneauxDisponibles: date => {\n    const userType = localStorage.getItem('user_type');\n    const endpoint = userType === 'retraite' ? `/retraites/rendez-vous/creneaux-disponibles/${date}` : `/actifs/rendez-vous/creneaux-disponibles/${date}`;\n    return api.get(endpoint);\n  },\n  // Cr√©er une nouvelle demande de rendez-vous\n  creerDemande: data => {\n    const userType = localStorage.getItem('user_type');\n    const endpoint = userType === 'retraite' ? '/retraites/rendez-vous' : '/actifs/rendez-vous';\n    return api.post(endpoint, data);\n  },\n  // Obtenir l'historique des demandes\n  getHistorique: (params = {}) => {\n    const userType = localStorage.getItem('user_type');\n    const endpoint = userType === 'retraite' ? '/retraites/rendez-vous/historique' : '/actifs/rendez-vous/historique';\n    const queryParams = new URLSearchParams(params).toString();\n    const url = queryParams ? `${endpoint}?${queryParams}` : endpoint;\n    return api.get(url);\n  },\n  // Obtenir une demande sp√©cifique\n  getById: id => {\n    const userType = localStorage.getItem('user_type');\n    const endpoint = userType === 'retraite' ? `/retraites/rendez-vous/${id}` : `/actifs/rendez-vous/${id}`;\n    return api.get(endpoint);\n  },\n  // Annuler une demande\n  annuler: (id, motifAnnulation = '') => {\n    const userType = localStorage.getItem('user_type');\n    const endpoint = userType === 'retraite' ? `/retraites/rendez-vous/${id}/annuler` : `/actifs/rendez-vous/${id}/annuler`;\n    return api.put(endpoint, {\n      motif_annulation: motifAnnulation\n    });\n  },\n  // Utilitaires pour les rendez-vous\n  utils: {\n    // Valider une date (jour ouvrable, dans le futur, avec pr√©avis 48h)\n    validerDate: date => {\n      const dateObj = new Date(date);\n      const maintenant = new Date();\n      const dans48h = new Date(maintenant.getTime() + 48 * 60 * 60 * 1000);\n      const errors = [];\n\n      // V√©rifier que c'est dans le futur avec 48h de pr√©avis\n      if (dateObj < dans48h) {\n        errors.push('La date doit √™tre au moins 48h √† l\\'avance');\n      }\n\n      // V√©rifier que c'est un jour ouvrable (lundi = 1, vendredi = 5)\n      const jourSemaine = dateObj.getDay();\n      if (jourSemaine === 0 || jourSemaine === 6) {\n        errors.push('Les rendez-vous ne sont disponibles que du lundi au vendredi');\n      }\n      return {\n        isValid: errors.length === 0,\n        errors\n      };\n    },\n    // Valider une heure (9h-16h)\n    validerHeure: heure => {\n      const heureNum = parseInt(heure.split(':')[0]);\n      const errors = [];\n      if (heureNum < 9 || heureNum >= 16) {\n        errors.push('Les cr√©neaux sont disponibles de 9h √† 16h');\n      }\n      return {\n        isValid: errors.length === 0,\n        errors\n      };\n    },\n    // G√©n√©rer les cr√©neaux horaires disponibles\n    genererCreneaux: () => {\n      const creneaux = [];\n      for (let heure = 9; heure < 16; heure++) {\n        creneaux.push({\n          value: `${heure.toString().padStart(2, '0')}:00`,\n          label: `${heure}h00`\n        });\n      }\n      return creneaux;\n    },\n    // Formater une date pour l'affichage\n    formaterDate: date => {\n      if (!date) return '';\n      const dateObj = new Date(date);\n      return dateObj.toLocaleDateString('fr-FR', {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n    },\n    // Formater date et heure ensemble\n    formaterDateHeure: (date, heure) => {\n      if (!date || !heure) return '';\n      const dateFormatee = rendezVousService.utils.formaterDate(date);\n      const heureFormatee = heure.substring(0, 5); // HH:MM\n      return `${dateFormatee} √† ${heureFormatee}`;\n    },\n    // Obtenir la couleur selon le statut\n    getCouleurStatut: statut => {\n      const couleurs = {\n        'en_attente': '#F59E0B',\n        'accepte': '#10B981',\n        'refuse': '#EF4444',\n        'reporte': '#8B5CF6',\n        'annule': '#6B7280'\n      };\n      return couleurs[statut] || '#6B7280';\n    },\n    // Obtenir l'ic√¥ne selon le motif\n    getIconeMotif: motif => {\n      const icones = {\n        'probleme_cotisations': 'üí∞',\n        'questions_pension': 'üè¶',\n        'mise_a_jour_dossier': 'üìÇ',\n        'reclamation_complexe': 'üîç',\n        'autre': 'üìã'\n      };\n      return icones[motif] || 'üìÖ';\n    },\n    // V√©rifier si une demande peut √™tre annul√©e\n    peutAnnuler: demande => {\n      if (!demande) return false;\n      const statuts_modifiables = ['en_attente'];\n      const date_soumission = new Date(demande.date_soumission);\n      const maintenant = new Date();\n      const diffHeures = (maintenant - date_soumission) / (1000 * 60 * 60);\n      return statuts_modifiables.includes(demande.statut) && diffHeures < 24;\n    },\n    // Calculer le d√©lai avant le rendez-vous\n    getDelaiRendezVous: dateRdv => {\n      if (!dateRdv) return null;\n      const rdv = new Date(dateRdv);\n      const maintenant = new Date();\n      const diffMs = rdv - maintenant;\n      if (diffMs < 0) return 'Pass√©';\n      const diffJours = Math.floor(diffMs / (1000 * 60 * 60 * 24));\n      const diffHeures = Math.floor(diffMs % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      if (diffJours > 0) {\n        return `Dans ${diffJours} jour${diffJours > 1 ? 's' : ''}`;\n      } else if (diffHeures > 0) {\n        return `Dans ${diffHeures} heure${diffHeures > 1 ? 's' : ''}`;\n      } else {\n        return 'Tr√®s bient√¥t';\n      }\n    },\n    // Valider le formulaire de demande\n    validerFormulaire: formData => {\n      var _formData$motif_autre;\n      const errors = {};\n      if (!formData.date_demandee) {\n        errors.date_demandee = 'La date est obligatoire';\n      } else {\n        const validationDate = rendezVousService.utils.validerDate(formData.date_demandee);\n        if (!validationDate.isValid) {\n          errors.date_demandee = validationDate.errors[0];\n        }\n      }\n      if (!formData.heure_demandee) {\n        errors.heure_demandee = 'L\\'heure est obligatoire';\n      } else {\n        const validationHeure = rendezVousService.utils.validerHeure(formData.heure_demandee);\n        if (!validationHeure.isValid) {\n          errors.heure_demandee = validationHeure.errors[0];\n        }\n      }\n      if (!formData.motif) {\n        errors.motif = 'Le motif est obligatoire';\n      }\n      if (formData.motif === 'autre' && !((_formData$motif_autre = formData.motif_autre) !== null && _formData$motif_autre !== void 0 && _formData$motif_autre.trim())) {\n        errors.motif_autre = 'Veuillez pr√©ciser le motif';\n      }\n      if (formData.commentaires && formData.commentaires.length > 1000) {\n        errors.commentaires = 'Les commentaires ne peuvent pas d√©passer 1000 caract√®res';\n      }\n      return {\n        isValid: Object.keys(errors).length === 0,\n        errors\n      };\n    },\n    // Formater la taille des fichiers (pour d'√©ventuels documents)\n    formatFileSize: bytes => {\n      if (bytes === 0) return '0 B';\n      const k = 1024;\n      const sizes = ['B', 'KB', 'MB', 'GB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i];\n    },\n    // G√©n√©rer une r√©f√©rence unique pour une demande\n    generateReference: () => {\n      const now = new Date();\n      const prefix = `RDV-${now.getFullYear()}${(now.getMonth() + 1).toString().padStart(2, '0')}`;\n      const suffix = Math.random().toString(36).substr(2, 6).toUpperCase();\n      return `${prefix}-${suffix}`;\n    },\n    // Formater une date pour les inputs\n    formatDateForInput: date => {\n      if (!date) return '';\n      const dateObj = new Date(date);\n      return dateObj.toISOString().split('T')[0];\n    },\n    // Obtenir le libell√© d'un jour de la semaine\n    getDayLabel: date => {\n      const dateObj = new Date(date);\n      const jours = ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'];\n      return jours[dateObj.getDay()];\n    },\n    // V√©rifier si une date est aujourd'hui\n    isToday: date => {\n      const dateObj = new Date(date);\n      const today = new Date();\n      return dateObj.toDateString() === today.toDateString();\n    },\n    // V√©rifier si une date est demain\n    isTomorrow: date => {\n      const dateObj = new Date(date);\n      const tomorrow = new Date();\n      tomorrow.setDate(tomorrow.getDate() + 1);\n      return dateObj.toDateString() === tomorrow.toDateString();\n    },\n    // Obtenir le message de temps relatif\n    getRelativeTimeMessage: date => {\n      if (rendezVousService.utils.isToday(date)) {\n        return 'Aujourd\\'hui';\n      } else if (rendezVousService.utils.isTomorrow(date)) {\n        return 'Demain';\n      } else {\n        const dateObj = new Date(date);\n        const today = new Date();\n        const diffTime = dateObj - today;\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n        if (diffDays > 0 && diffDays <= 7) {\n          return `Dans ${diffDays} jour${diffDays > 1 ? 's' : ''}`;\n        } else {\n          return rendezVousService.utils.formaterDate(date);\n        }\n      }\n    }\n  }\n};\nexport default rendezVousService;","map":{"version":3,"names":["api","rendezVousService","getPageInfo","userType","localStorage","getItem","endpoint","get","getCreneauxDisponibles","date","creerDemande","data","post","getHistorique","params","queryParams","URLSearchParams","toString","url","getById","id","annuler","motifAnnulation","put","motif_annulation","utils","validerDate","dateObj","Date","maintenant","dans48h","getTime","errors","push","jourSemaine","getDay","isValid","length","validerHeure","heure","heureNum","parseInt","split","genererCreneaux","creneaux","value","padStart","label","formaterDate","toLocaleDateString","weekday","year","month","day","formaterDateHeure","dateFormatee","heureFormatee","substring","getCouleurStatut","statut","couleurs","getIconeMotif","motif","icones","peutAnnuler","demande","statuts_modifiables","date_soumission","diffHeures","includes","getDelaiRendezVous","dateRdv","rdv","diffMs","diffJours","Math","floor","validerFormulaire","formData","_formData$motif_autre","date_demandee","validationDate","heure_demandee","validationHeure","motif_autre","trim","commentaires","Object","keys","formatFileSize","bytes","k","sizes","i","log","parseFloat","pow","toFixed","generateReference","now","prefix","getFullYear","getMonth","suffix","random","substr","toUpperCase","formatDateForInput","toISOString","getDayLabel","jours","isToday","today","toDateString","isTomorrow","tomorrow","setDate","getDate","getRelativeTimeMessage","diffTime","diffDays","ceil"],"sources":["C:/Users/invite/Documents/servicescppf/frontend/src/services/rendezVousService.js"],"sourcesContent":["// File: frontend/src/services/rendezVousService.js\r\n\r\nimport api from './api';\r\n\r\n// Services pour les rendez-vous (universels actifs/retrait√©s)\r\nexport const rendezVousService = {\r\n  // Obtenir les informations de la page de prise de RDV\r\n  getPageInfo: () => {\r\n    const userType = localStorage.getItem('user_type');\r\n    const endpoint = userType === 'retraite' ? '/retraites/rendez-vous' : '/actifs/rendez-vous';\r\n    return api.get(endpoint);\r\n  },\r\n\r\n  // Obtenir les cr√©neaux disponibles pour une date\r\n  getCreneauxDisponibles: (date) => {\r\n    const userType = localStorage.getItem('user_type');\r\n    const endpoint = userType === 'retraite' \r\n      ? `/retraites/rendez-vous/creneaux-disponibles/${date}` \r\n      : `/actifs/rendez-vous/creneaux-disponibles/${date}`;\r\n    return api.get(endpoint);\r\n  },\r\n\r\n  // Cr√©er une nouvelle demande de rendez-vous\r\n  creerDemande: (data) => {\r\n    const userType = localStorage.getItem('user_type');\r\n    const endpoint = userType === 'retraite' ? '/retraites/rendez-vous' : '/actifs/rendez-vous';\r\n    return api.post(endpoint, data);\r\n  },\r\n\r\n  // Obtenir l'historique des demandes\r\n  getHistorique: (params = {}) => {\r\n    const userType = localStorage.getItem('user_type');\r\n    const endpoint = userType === 'retraite' ? '/retraites/rendez-vous/historique' : '/actifs/rendez-vous/historique';\r\n    \r\n    const queryParams = new URLSearchParams(params).toString();\r\n    const url = queryParams ? `${endpoint}?${queryParams}` : endpoint;\r\n    \r\n    return api.get(url);\r\n  },\r\n\r\n  // Obtenir une demande sp√©cifique\r\n  getById: (id) => {\r\n    const userType = localStorage.getItem('user_type');\r\n    const endpoint = userType === 'retraite' ? `/retraites/rendez-vous/${id}` : `/actifs/rendez-vous/${id}`;\r\n    return api.get(endpoint);\r\n  },\r\n\r\n  // Annuler une demande\r\n  annuler: (id, motifAnnulation = '') => {\r\n    const userType = localStorage.getItem('user_type');\r\n    const endpoint = userType === 'retraite' \r\n      ? `/retraites/rendez-vous/${id}/annuler` \r\n      : `/actifs/rendez-vous/${id}/annuler`;\r\n    \r\n    return api.put(endpoint, {\r\n      motif_annulation: motifAnnulation\r\n    });\r\n  },\r\n\r\n  // Utilitaires pour les rendez-vous\r\n  utils: {\r\n    // Valider une date (jour ouvrable, dans le futur, avec pr√©avis 48h)\r\n    validerDate: (date) => {\r\n      const dateObj = new Date(date);\r\n      const maintenant = new Date();\r\n      const dans48h = new Date(maintenant.getTime() + (48 * 60 * 60 * 1000));\r\n      \r\n      const errors = [];\r\n      \r\n      // V√©rifier que c'est dans le futur avec 48h de pr√©avis\r\n      if (dateObj < dans48h) {\r\n        errors.push('La date doit √™tre au moins 48h √† l\\'avance');\r\n      }\r\n      \r\n      // V√©rifier que c'est un jour ouvrable (lundi = 1, vendredi = 5)\r\n      const jourSemaine = dateObj.getDay();\r\n      if (jourSemaine === 0 || jourSemaine === 6) {\r\n        errors.push('Les rendez-vous ne sont disponibles que du lundi au vendredi');\r\n      }\r\n      \r\n      return {\r\n        isValid: errors.length === 0,\r\n        errors\r\n      };\r\n    },\r\n\r\n    // Valider une heure (9h-16h)\r\n    validerHeure: (heure) => {\r\n      const heureNum = parseInt(heure.split(':')[0]);\r\n      const errors = [];\r\n      \r\n      if (heureNum < 9 || heureNum >= 16) {\r\n        errors.push('Les cr√©neaux sont disponibles de 9h √† 16h');\r\n      }\r\n      \r\n      return {\r\n        isValid: errors.length === 0,\r\n        errors\r\n      };\r\n    },\r\n\r\n    // G√©n√©rer les cr√©neaux horaires disponibles\r\n    genererCreneaux: () => {\r\n      const creneaux = [];\r\n      for (let heure = 9; heure < 16; heure++) {\r\n        creneaux.push({\r\n          value: `${heure.toString().padStart(2, '0')}:00`,\r\n          label: `${heure}h00`\r\n        });\r\n      }\r\n      return creneaux;\r\n    },\r\n\r\n    // Formater une date pour l'affichage\r\n    formaterDate: (date) => {\r\n      if (!date) return '';\r\n      const dateObj = new Date(date);\r\n      return dateObj.toLocaleDateString('fr-FR', {\r\n        weekday: 'long',\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: 'numeric'\r\n      });\r\n    },\r\n\r\n    // Formater date et heure ensemble\r\n    formaterDateHeure: (date, heure) => {\r\n      if (!date || !heure) return '';\r\n      const dateFormatee = rendezVousService.utils.formaterDate(date);\r\n      const heureFormatee = heure.substring(0, 5); // HH:MM\r\n      return `${dateFormatee} √† ${heureFormatee}`;\r\n    },\r\n\r\n    // Obtenir la couleur selon le statut\r\n    getCouleurStatut: (statut) => {\r\n      const couleurs = {\r\n        'en_attente': '#F59E0B',\r\n        'accepte': '#10B981',\r\n        'refuse': '#EF4444',\r\n        'reporte': '#8B5CF6',\r\n        'annule': '#6B7280'\r\n      };\r\n      return couleurs[statut] || '#6B7280';\r\n    },\r\n\r\n    // Obtenir l'ic√¥ne selon le motif\r\n    getIconeMotif: (motif) => {\r\n      const icones = {\r\n        'probleme_cotisations': 'üí∞',\r\n        'questions_pension': 'üè¶',\r\n        'mise_a_jour_dossier': 'üìÇ',\r\n        'reclamation_complexe': 'üîç',\r\n        'autre': 'üìã'\r\n      };\r\n      return icones[motif] || 'üìÖ';\r\n    },\r\n\r\n    // V√©rifier si une demande peut √™tre annul√©e\r\n    peutAnnuler: (demande) => {\r\n      if (!demande) return false;\r\n      \r\n      const statuts_modifiables = ['en_attente'];\r\n      const date_soumission = new Date(demande.date_soumission);\r\n      const maintenant = new Date();\r\n      const diffHeures = (maintenant - date_soumission) / (1000 * 60 * 60);\r\n      \r\n      return statuts_modifiables.includes(demande.statut) && diffHeures < 24;\r\n    },\r\n\r\n    // Calculer le d√©lai avant le rendez-vous\r\n    getDelaiRendezVous: (dateRdv) => {\r\n      if (!dateRdv) return null;\r\n      \r\n      const rdv = new Date(dateRdv);\r\n      const maintenant = new Date();\r\n      const diffMs = rdv - maintenant;\r\n      \r\n      if (diffMs < 0) return 'Pass√©';\r\n      \r\n      const diffJours = Math.floor(diffMs / (1000 * 60 * 60 * 24));\r\n      const diffHeures = Math.floor((diffMs % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n      \r\n      if (diffJours > 0) {\r\n        return `Dans ${diffJours} jour${diffJours > 1 ? 's' : ''}`;\r\n      } else if (diffHeures > 0) {\r\n        return `Dans ${diffHeures} heure${diffHeures > 1 ? 's' : ''}`;\r\n      } else {\r\n        return 'Tr√®s bient√¥t';\r\n      }\r\n    },\r\n\r\n    // Valider le formulaire de demande\r\n    validerFormulaire: (formData) => {\r\n      const errors = {};\r\n      \r\n      if (!formData.date_demandee) {\r\n        errors.date_demandee = 'La date est obligatoire';\r\n      } else {\r\n        const validationDate = rendezVousService.utils.validerDate(formData.date_demandee);\r\n        if (!validationDate.isValid) {\r\n          errors.date_demandee = validationDate.errors[0];\r\n        }\r\n      }\r\n      \r\n      if (!formData.heure_demandee) {\r\n        errors.heure_demandee = 'L\\'heure est obligatoire';\r\n      } else {\r\n        const validationHeure = rendezVousService.utils.validerHeure(formData.heure_demandee);\r\n        if (!validationHeure.isValid) {\r\n          errors.heure_demandee = validationHeure.errors[0];\r\n        }\r\n      }\r\n      \r\n      if (!formData.motif) {\r\n        errors.motif = 'Le motif est obligatoire';\r\n      }\r\n      \r\n      if (formData.motif === 'autre' && !formData.motif_autre?.trim()) {\r\n        errors.motif_autre = 'Veuillez pr√©ciser le motif';\r\n      }\r\n      \r\n      if (formData.commentaires && formData.commentaires.length > 1000) {\r\n        errors.commentaires = 'Les commentaires ne peuvent pas d√©passer 1000 caract√®res';\r\n      }\r\n      \r\n      return {\r\n        isValid: Object.keys(errors).length === 0,\r\n        errors\r\n      };\r\n    },\r\n\r\n    // Formater la taille des fichiers (pour d'√©ventuels documents)\r\n    formatFileSize: (bytes) => {\r\n      if (bytes === 0) return '0 B';\r\n      const k = 1024;\r\n      const sizes = ['B', 'KB', 'MB', 'GB'];\r\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i];\r\n    },\r\n\r\n    // G√©n√©rer une r√©f√©rence unique pour une demande\r\n    generateReference: () => {\r\n      const now = new Date();\r\n      const prefix = `RDV-${now.getFullYear()}${(now.getMonth() + 1).toString().padStart(2, '0')}`;\r\n      const suffix = Math.random().toString(36).substr(2, 6).toUpperCase();\r\n      return `${prefix}-${suffix}`;\r\n    },\r\n\r\n    // Formater une date pour les inputs\r\n    formatDateForInput: (date) => {\r\n      if (!date) return '';\r\n      const dateObj = new Date(date);\r\n      return dateObj.toISOString().split('T')[0];\r\n    },\r\n\r\n    // Obtenir le libell√© d'un jour de la semaine\r\n    getDayLabel: (date) => {\r\n      const dateObj = new Date(date);\r\n      const jours = ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'];\r\n      return jours[dateObj.getDay()];\r\n    },\r\n\r\n    // V√©rifier si une date est aujourd'hui\r\n    isToday: (date) => {\r\n      const dateObj = new Date(date);\r\n      const today = new Date();\r\n      return dateObj.toDateString() === today.toDateString();\r\n    },\r\n\r\n    // V√©rifier si une date est demain\r\n    isTomorrow: (date) => {\r\n      const dateObj = new Date(date);\r\n      const tomorrow = new Date();\r\n      tomorrow.setDate(tomorrow.getDate() + 1);\r\n      return dateObj.toDateString() === tomorrow.toDateString();\r\n    },\r\n\r\n    // Obtenir le message de temps relatif\r\n    getRelativeTimeMessage: (date) => {\r\n      if (rendezVousService.utils.isToday(date)) {\r\n        return 'Aujourd\\'hui';\r\n      } else if (rendezVousService.utils.isTomorrow(date)) {\r\n        return 'Demain';\r\n      } else {\r\n        const dateObj = new Date(date);\r\n        const today = new Date();\r\n        const diffTime = dateObj - today;\r\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n        \r\n        if (diffDays > 0 && diffDays <= 7) {\r\n          return `Dans ${diffDays} jour${diffDays > 1 ? 's' : ''}`;\r\n        } else {\r\n          return rendezVousService.utils.formaterDate(date);\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport default rendezVousService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}