{"ast":null,"code":"// File: frontend/src/services/api.js - Version corrigée avec debug amélioré\n\nimport axios from 'axios';\n\n// Configuration de base de l'API\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\n\n// Créer une instance axios\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  timeout: 30000\n});\n\n// Intercepteur pour ajouter le token d'authentification\napi.interceptors.request.use(config => {\n  var _config$method;\n  const token = localStorage.getItem('auth_token') || localStorage.getItem('setup_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n\n  // ✅ DEBUG: Log des requêtes\n  console.log(`🔄 API Request: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`, {\n    headers: config.headers,\n    data: config.data\n  });\n  return config;\n}, error => {\n  console.error('❌ Request interceptor error:', error);\n  return Promise.reject(error);\n});\n\n// Intercepteur pour gérer les réponses et erreurs\napi.interceptors.response.use(response => {\n  var _response$config$meth;\n  // ✅ DEBUG: Log des réponses réussies\n  console.log(`✅ API Response: ${(_response$config$meth = response.config.method) === null || _response$config$meth === void 0 ? void 0 : _response$config$meth.toUpperCase()} ${response.config.url}`, {\n    status: response.status,\n    data: response.data\n  });\n  return response;\n}, error => {\n  var _error$response, _error$response2, _error$response3, _error$config, _error$config2, _error$config3, _error$response4;\n  // ✅ DEBUG: Log des erreurs amélioré\n  console.error('❌ API Error:', {\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    statusText: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.statusText,\n    data: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data,\n    url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n    method: (_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : _error$config2.method,\n    headers: (_error$config3 = error.config) === null || _error$config3 === void 0 ? void 0 : _error$config3.headers\n  });\n\n  // Gestion des erreurs d'authentification\n  if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 401) {\n    console.warn('🔐 Token expiré ou invalide - Redirection vers login');\n    localStorage.removeItem('auth_token');\n    localStorage.removeItem('setup_token');\n    localStorage.removeItem('user_data');\n    localStorage.removeItem('user_type');\n    if (!window.location.pathname.includes('/login') && !window.location.pathname.includes('/services')) {\n      window.location.href = '/services';\n    }\n  }\n  return Promise.reject(error);\n});\n\n// Services d'authentification\nexport const authService = {\n  firstLoginActifs: data => api.post('/auth/first-login/actifs', data),\n  firstLoginRetraites: data => api.post('/auth/first-login/retraites', data),\n  setupProfile: data => api.post('/auth/setup-profile', data),\n  standardLogin: data => api.post('/auth/standard-login', data),\n  logout: () => api.post('/auth/logout'),\n  verifyToken: () => api.get('/auth/verify'),\n  getCurrentUser: () => api.get('/auth/user'),\n  verifyPhone: data => api.post('/auth/verify-phone-setup', data),\n  resendVerification: () => api.post('/auth/resend-verification-setup')\n};\n\n// Services utilisateur\nexport const userService = {\n  getProfile: () => api.get('/profile'),\n  updateProfile: data => api.put('/profile', data),\n  changePassword: data => api.put('/profile/password', data),\n  verifyPhone: data => api.post('/profile/verify-phone', data),\n  resendVerification: () => api.post('/profile/resend-verification')\n};\n\n// Services pour le simulateur de pension (actifs uniquement)\nexport const pensionSimulatorService = {\n  getProfile: () => api.get('/actifs/simulateur-pension/profil'),\n  simulate: data => api.post('/actifs/simulateur-pension/simuler', data),\n  getHistory: () => api.get('/actifs/simulateur-pension/historique'),\n  getParameters: () => api.get('/actifs/simulateur-pension/parametres')\n};\n\n// Services pour les agents actifs\nexport const agentService = {\n  getDashboard: () => api.get('/actifs/dashboard'),\n  getAttestations: () => api.get('/actifs/attestations'),\n  requestAttestation: data => api.post('/actifs/attestations', data),\n  getPrestations: () => api.get('/actifs/prestations'),\n  getCotisations: () => api.get('/actifs/cotisations')\n};\n\n// Services pour les retraités\nexport const retraiteService = {\n  getDashboard: () => api.get('/retraites/dashboard'),\n  getPensionInfo: () => api.get('/retraites/pension'),\n  getCertificatsVie: () => api.get('/retraites/certificats-vie'),\n  submitCertificatVie: data => api.post('/retraites/certificats-vie', data),\n  getHistorique: () => api.get('/retraites/historique')\n};\n\n// ✅ SERVICES FAMILLE UNIVERSELS CORRIGÉS\nexport const familleService = {\n  // Helper pour déterminer le préfixe selon le type d'utilisateur\n  _getUserPrefix: () => {\n    const userType = localStorage.getItem('user_type');\n    console.log('🔍 Détection type utilisateur:', userType);\n    return userType === 'retraite' ? 'retraites' : 'actifs';\n  },\n  // Obtenir la grappe familiale\n  getGrappeFamiliale: async () => {\n    try {\n      const prefix = familleService._getUserPrefix();\n      console.log(`📡 Appel API famille: /${prefix}/famille`);\n      const response = await api.get(`/${prefix}/famille`);\n\n      // ✅ Retourner directement response.data pour éviter les erreurs de structure\n      if (response.data && typeof response.data === 'object') {\n        return response.data;\n      } else {\n        throw new Error('Structure de réponse invalide');\n      }\n    } catch (error) {\n      console.error('❌ Erreur getGrappeFamiliale:', error);\n      throw error;\n    }\n  },\n  // Sauvegarder/modifier un conjoint\n  saveConjoint: async conjointData => {\n    try {\n      const prefix = familleService._getUserPrefix();\n      console.log(`📡 Sauvegarde conjoint: /${prefix}/famille/conjoint`, conjointData);\n      const response = await api.post(`/${prefix}/famille/conjoint`, conjointData);\n      return response; // Retourner la réponse complète pour compatibilité\n    } catch (error) {\n      console.error('❌ Erreur saveConjoint:', error);\n      throw error;\n    }\n  },\n  // Ajouter un enfant\n  addEnfant: async enfantData => {\n    try {\n      const prefix = familleService._getUserPrefix();\n      console.log(`📡 Ajout enfant: /${prefix}/famille/enfants`, enfantData);\n      const response = await api.post(`/${prefix}/famille/enfants`, enfantData);\n      return response;\n    } catch (error) {\n      console.error('❌ Erreur addEnfant:', error);\n      throw error;\n    }\n  },\n  // Modifier un enfant\n  updateEnfant: async (enfantId, enfantData) => {\n    try {\n      const prefix = familleService._getUserPrefix();\n      console.log(`📡 Modification enfant: /${prefix}/famille/enfants/${enfantId}`, enfantData);\n      const response = await api.put(`/${prefix}/famille/enfants/${enfantId}`, enfantData);\n      return response;\n    } catch (error) {\n      console.error('❌ Erreur updateEnfant:', error);\n      throw error;\n    }\n  },\n  // Supprimer un enfant\n  deleteEnfant: async enfantId => {\n    try {\n      const prefix = familleService._getUserPrefix();\n      console.log(`📡 Suppression enfant: /${prefix}/famille/enfants/${enfantId}`);\n      const response = await api.delete(`/${prefix}/famille/enfants/${enfantId}`);\n      return response;\n    } catch (error) {\n      console.error('❌ Erreur deleteEnfant:', error);\n      throw error;\n    }\n  }\n};\n\n// ✅ UTILITAIRES AMÉLIORÉS\nexport const utils = {\n  formatValidationErrors: errors => {\n    const formattedErrors = {};\n    for (const field in errors) {\n      formattedErrors[field] = Array.isArray(errors[field]) ? errors[field][0] : errors[field];\n    }\n    return formattedErrors;\n  },\n  isAuthenticated: () => {\n    const token = localStorage.getItem('auth_token');\n    const hasToken = !!token;\n    console.log('🔐 Check authentication:', hasToken);\n    return hasToken;\n  },\n  getUserData: () => {\n    const userData = localStorage.getItem('user_data');\n    const parsed = userData ? JSON.parse(userData) : null;\n    console.log('👤 User data:', parsed);\n    return parsed;\n  },\n  setUserData: userData => {\n    console.log('💾 Sauvegarde user data:', userData);\n    localStorage.setItem('user_data', JSON.stringify(userData));\n    if (userData.type) {\n      localStorage.setItem('user_type', userData.type);\n    }\n  },\n  clearSession: () => {\n    console.log('🧹 Nettoyage session');\n    localStorage.removeItem('auth_token');\n    localStorage.removeItem('setup_token');\n    localStorage.removeItem('user_data');\n    localStorage.removeItem('user_type');\n  },\n  // ✅ NOUVELLE FONCTION DEBUG\n  debugSession: () => {\n    const debug = {\n      auth_token: localStorage.getItem('auth_token') ? 'Present' : 'Missing',\n      setup_token: localStorage.getItem('setup_token') ? 'Present' : 'Missing',\n      user_data: localStorage.getItem('user_data') ? JSON.parse(localStorage.getItem('user_data')) : null,\n      user_type: localStorage.getItem('user_type'),\n      current_url: window.location.pathname\n    };\n    console.table(debug);\n    return debug;\n  },\n  formatPhoneNumber: phone => {\n    if (!phone) return '';\n    const cleaned = phone.replace(/\\D/g, '');\n    if (cleaned.length === 8 || cleaned.length === 9) {\n      return `+241${cleaned}`;\n    }\n    return phone;\n  },\n  validateMatriculeSolde: matricule => {\n    return /^[0-9]{6}[A-Z]$/.test(matricule);\n  },\n  validateNumeroPension: numero => {\n    return /^[0-9]+$/.test(numero);\n  },\n  formatCurrency: amount => {\n    if (!amount) return '0 FCFA';\n    return new Intl.NumberFormat('fr-FR', {\n      style: 'currency',\n      currency: 'XAF',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(amount).replace('XAF', 'FCFA');\n  },\n  formatDate: date => {\n    if (!date) return '';\n    return new Date(date).toLocaleDateString('fr-FR', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  },\n  calculateAge: birthDate => {\n    if (!birthDate) return 0;\n    const today = new Date();\n    const birth = new Date(birthDate);\n    let age = today.getFullYear() - birth.getFullYear();\n    const monthDiff = today.getMonth() - birth.getMonth();\n    if (monthDiff < 0 || monthDiff === 0 && today.getDate() < birth.getDate()) {\n      age--;\n    }\n    return age;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","timeout","interceptors","request","use","config","_config$method","token","localStorage","getItem","Authorization","console","log","method","toUpperCase","url","data","error","Promise","reject","response","_response$config$meth","status","_error$response","_error$response2","_error$response3","_error$config","_error$config2","_error$config3","_error$response4","statusText","warn","removeItem","window","location","pathname","includes","href","authService","firstLoginActifs","post","firstLoginRetraites","setupProfile","standardLogin","logout","verifyToken","get","getCurrentUser","verifyPhone","resendVerification","userService","getProfile","updateProfile","put","changePassword","pensionSimulatorService","simulate","getHistory","getParameters","agentService","getDashboard","getAttestations","requestAttestation","getPrestations","getCotisations","retraiteService","getPensionInfo","getCertificatsVie","submitCertificatVie","getHistorique","familleService","_getUserPrefix","userType","getGrappeFamiliale","prefix","Error","saveConjoint","conjointData","addEnfant","enfantData","updateEnfant","enfantId","deleteEnfant","delete","utils","formatValidationErrors","errors","formattedErrors","field","Array","isArray","isAuthenticated","hasToken","getUserData","userData","parsed","JSON","parse","setUserData","setItem","stringify","type","clearSession","debugSession","debug","auth_token","setup_token","user_data","user_type","current_url","table","formatPhoneNumber","phone","cleaned","replace","length","validateMatriculeSolde","matricule","test","validateNumeroPension","numero","formatCurrency","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatDate","date","Date","toLocaleDateString","year","month","day","calculateAge","birthDate","today","birth","age","getFullYear","monthDiff","getMonth","getDate"],"sources":["C:/Users/invite/Documents/servicescppf/frontend/src/services/api.js"],"sourcesContent":["// File: frontend/src/services/api.js - Version corrigée avec debug amélioré\r\n\r\nimport axios from 'axios';\r\n\r\n// Configuration de base de l'API\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\r\n\r\n// Créer une instance axios\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json',\r\n  },\r\n  timeout: 30000,\r\n});\r\n\r\n// Intercepteur pour ajouter le token d'authentification\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('auth_token') || localStorage.getItem('setup_token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    \r\n    // ✅ DEBUG: Log des requêtes\r\n    console.log(`🔄 API Request: ${config.method?.toUpperCase()} ${config.url}`, {\r\n      headers: config.headers,\r\n      data: config.data\r\n    });\r\n    \r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('❌ Request interceptor error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Intercepteur pour gérer les réponses et erreurs\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    // ✅ DEBUG: Log des réponses réussies\r\n    console.log(`✅ API Response: ${response.config.method?.toUpperCase()} ${response.config.url}`, {\r\n      status: response.status,\r\n      data: response.data\r\n    });\r\n    return response;\r\n  },\r\n  (error) => {\r\n    // ✅ DEBUG: Log des erreurs amélioré\r\n    console.error('❌ API Error:', {\r\n      status: error.response?.status,\r\n      statusText: error.response?.statusText,\r\n      data: error.response?.data,\r\n      url: error.config?.url,\r\n      method: error.config?.method,\r\n      headers: error.config?.headers\r\n    });\r\n    \r\n    // Gestion des erreurs d'authentification\r\n    if (error.response?.status === 401) {\r\n      console.warn('🔐 Token expiré ou invalide - Redirection vers login');\r\n      localStorage.removeItem('auth_token');\r\n      localStorage.removeItem('setup_token');\r\n      localStorage.removeItem('user_data');\r\n      localStorage.removeItem('user_type');\r\n      \r\n      if (!window.location.pathname.includes('/login') && !window.location.pathname.includes('/services')) {\r\n        window.location.href = '/services';\r\n      }\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Services d'authentification\r\nexport const authService = {\r\n  firstLoginActifs: (data) => api.post('/auth/first-login/actifs', data),\r\n  firstLoginRetraites: (data) => api.post('/auth/first-login/retraites', data),\r\n  setupProfile: (data) => api.post('/auth/setup-profile', data),\r\n  standardLogin: (data) => api.post('/auth/standard-login', data),\r\n  logout: () => api.post('/auth/logout'),\r\n  verifyToken: () => api.get('/auth/verify'),\r\n  getCurrentUser: () => api.get('/auth/user'),\r\n  verifyPhone: (data) => api.post('/auth/verify-phone-setup', data),\r\n  resendVerification: () => api.post('/auth/resend-verification-setup')\r\n};\r\n\r\n// Services utilisateur\r\nexport const userService = {\r\n  getProfile: () => api.get('/profile'),\r\n  updateProfile: (data) => api.put('/profile', data),\r\n  changePassword: (data) => api.put('/profile/password', data),\r\n  verifyPhone: (data) => api.post('/profile/verify-phone', data),\r\n  resendVerification: () => api.post('/profile/resend-verification')\r\n};\r\n\r\n// Services pour le simulateur de pension (actifs uniquement)\r\nexport const pensionSimulatorService = {\r\n  getProfile: () => api.get('/actifs/simulateur-pension/profil'),\r\n  simulate: (data) => api.post('/actifs/simulateur-pension/simuler', data),\r\n  getHistory: () => api.get('/actifs/simulateur-pension/historique'),\r\n  getParameters: () => api.get('/actifs/simulateur-pension/parametres')\r\n};\r\n\r\n// Services pour les agents actifs\r\nexport const agentService = {\r\n  getDashboard: () => api.get('/actifs/dashboard'),\r\n  getAttestations: () => api.get('/actifs/attestations'),\r\n  requestAttestation: (data) => api.post('/actifs/attestations', data),\r\n  getPrestations: () => api.get('/actifs/prestations'),\r\n  getCotisations: () => api.get('/actifs/cotisations'),\r\n};\r\n\r\n// Services pour les retraités\r\nexport const retraiteService = {\r\n  getDashboard: () => api.get('/retraites/dashboard'),\r\n  getPensionInfo: () => api.get('/retraites/pension'),\r\n  getCertificatsVie: () => api.get('/retraites/certificats-vie'),\r\n  submitCertificatVie: (data) => api.post('/retraites/certificats-vie', data),\r\n  getHistorique: () => api.get('/retraites/historique'),\r\n};\r\n\r\n// ✅ SERVICES FAMILLE UNIVERSELS CORRIGÉS\r\nexport const familleService = {\r\n    // Helper pour déterminer le préfixe selon le type d'utilisateur\r\n    _getUserPrefix: () => {\r\n        const userType = localStorage.getItem('user_type');\r\n        console.log('🔍 Détection type utilisateur:', userType);\r\n        return userType === 'retraite' ? 'retraites' : 'actifs';\r\n    },\r\n\r\n    // Obtenir la grappe familiale\r\n    getGrappeFamiliale: async () => {\r\n        try {\r\n            const prefix = familleService._getUserPrefix();\r\n            console.log(`📡 Appel API famille: /${prefix}/famille`);\r\n            \r\n            const response = await api.get(`/${prefix}/famille`);\r\n            \r\n            // ✅ Retourner directement response.data pour éviter les erreurs de structure\r\n            if (response.data && typeof response.data === 'object') {\r\n                return response.data;\r\n            } else {\r\n                throw new Error('Structure de réponse invalide');\r\n            }\r\n        } catch (error) {\r\n            console.error('❌ Erreur getGrappeFamiliale:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Sauvegarder/modifier un conjoint\r\n    saveConjoint: async (conjointData) => {\r\n        try {\r\n            const prefix = familleService._getUserPrefix();\r\n            console.log(`📡 Sauvegarde conjoint: /${prefix}/famille/conjoint`, conjointData);\r\n            \r\n            const response = await api.post(`/${prefix}/famille/conjoint`, conjointData);\r\n            return response; // Retourner la réponse complète pour compatibilité\r\n        } catch (error) {\r\n            console.error('❌ Erreur saveConjoint:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Ajouter un enfant\r\n    addEnfant: async (enfantData) => {\r\n        try {\r\n            const prefix = familleService._getUserPrefix();\r\n            console.log(`📡 Ajout enfant: /${prefix}/famille/enfants`, enfantData);\r\n            \r\n            const response = await api.post(`/${prefix}/famille/enfants`, enfantData);\r\n            return response;\r\n        } catch (error) {\r\n            console.error('❌ Erreur addEnfant:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Modifier un enfant\r\n    updateEnfant: async (enfantId, enfantData) => {\r\n        try {\r\n            const prefix = familleService._getUserPrefix();\r\n            console.log(`📡 Modification enfant: /${prefix}/famille/enfants/${enfantId}`, enfantData);\r\n            \r\n            const response = await api.put(`/${prefix}/famille/enfants/${enfantId}`, enfantData);\r\n            return response;\r\n        } catch (error) {\r\n            console.error('❌ Erreur updateEnfant:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    // Supprimer un enfant\r\n    deleteEnfant: async (enfantId) => {\r\n        try {\r\n            const prefix = familleService._getUserPrefix();\r\n            console.log(`📡 Suppression enfant: /${prefix}/famille/enfants/${enfantId}`);\r\n            \r\n            const response = await api.delete(`/${prefix}/famille/enfants/${enfantId}`);\r\n            return response;\r\n        } catch (error) {\r\n            console.error('❌ Erreur deleteEnfant:', error);\r\n            throw error;\r\n        }\r\n    }\r\n};\r\n\r\n// ✅ UTILITAIRES AMÉLIORÉS\r\nexport const utils = {\r\n  formatValidationErrors: (errors) => {\r\n    const formattedErrors = {};\r\n    for (const field in errors) {\r\n      formattedErrors[field] = Array.isArray(errors[field]) ? errors[field][0] : errors[field];\r\n    }\r\n    return formattedErrors;\r\n  },\r\n  \r\n  isAuthenticated: () => {\r\n    const token = localStorage.getItem('auth_token');\r\n    const hasToken = !!token;\r\n    console.log('🔐 Check authentication:', hasToken);\r\n    return hasToken;\r\n  },\r\n  \r\n  getUserData: () => {\r\n    const userData = localStorage.getItem('user_data');\r\n    const parsed = userData ? JSON.parse(userData) : null;\r\n    console.log('👤 User data:', parsed);\r\n    return parsed;\r\n  },\r\n  \r\n  setUserData: (userData) => {\r\n    console.log('💾 Sauvegarde user data:', userData);\r\n    localStorage.setItem('user_data', JSON.stringify(userData));\r\n    if (userData.type) {\r\n      localStorage.setItem('user_type', userData.type);\r\n    }\r\n  },\r\n  \r\n  clearSession: () => {\r\n    console.log('🧹 Nettoyage session');\r\n    localStorage.removeItem('auth_token');\r\n    localStorage.removeItem('setup_token');\r\n    localStorage.removeItem('user_data');\r\n    localStorage.removeItem('user_type');\r\n  },\r\n  \r\n  // ✅ NOUVELLE FONCTION DEBUG\r\n  debugSession: () => {\r\n    const debug = {\r\n      auth_token: localStorage.getItem('auth_token') ? 'Present' : 'Missing',\r\n      setup_token: localStorage.getItem('setup_token') ? 'Present' : 'Missing',\r\n      user_data: localStorage.getItem('user_data') ? JSON.parse(localStorage.getItem('user_data')) : null,\r\n      user_type: localStorage.getItem('user_type'),\r\n      current_url: window.location.pathname\r\n    };\r\n    console.table(debug);\r\n    return debug;\r\n  },\r\n  \r\n  formatPhoneNumber: (phone) => {\r\n    if (!phone) return '';\r\n    const cleaned = phone.replace(/\\D/g, '');\r\n    if (cleaned.length === 8 || cleaned.length === 9) {\r\n      return `+241${cleaned}`;\r\n    }\r\n    return phone;\r\n  },\r\n  \r\n  validateMatriculeSolde: (matricule) => {\r\n    return /^[0-9]{6}[A-Z]$/.test(matricule);\r\n  },\r\n  \r\n  validateNumeroPension: (numero) => {\r\n    return /^[0-9]+$/.test(numero);\r\n  },\r\n  \r\n  formatCurrency: (amount) => {\r\n    if (!amount) return '0 FCFA';\r\n    return new Intl.NumberFormat('fr-FR', {\r\n      style: 'currency',\r\n      currency: 'XAF',\r\n      minimumFractionDigits: 0,\r\n      maximumFractionDigits: 0,\r\n    }).format(amount).replace('XAF', 'FCFA');\r\n  },\r\n  \r\n  formatDate: (date) => {\r\n    if (!date) return '';\r\n    return new Date(date).toLocaleDateString('fr-FR', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n    });\r\n  },\r\n  \r\n  calculateAge: (birthDate) => {\r\n    if (!birthDate) return 0;\r\n    const today = new Date();\r\n    const birth = new Date(birthDate);\r\n    let age = today.getFullYear() - birth.getFullYear();\r\n    const monthDiff = today.getMonth() - birth.getMonth();\r\n    \r\n    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birth.getDate())) {\r\n      age--;\r\n    }\r\n    \r\n    return age;\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}