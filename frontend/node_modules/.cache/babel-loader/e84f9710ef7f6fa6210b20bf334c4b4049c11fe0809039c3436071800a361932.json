{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\invite\\\\Documents\\\\servicescppf\\\\frontend\\\\src\\\\components\\\\StandardLogin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { authService } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StandardLogin = ({\n  userType,\n  onModeSwitch\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    identifier: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState({\n    type: '',\n    text: ''\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // Validation en temps réel pour l'identifiant\n    let formattedValue = value;\n    if (name === 'identifier') {\n      if (userType === 'actifs') {\n        // Pour les actifs : matricule solde (6 chiffres + 1 lettre)\n        formattedValue = value.replace(/[^0-9A-Z]/g, '').slice(0, 7);\n      } else {\n        // Pour les retraités : numéro de pension (chiffres uniquement)\n        formattedValue = value.replace(/[^0-9]/g, '');\n      }\n    }\n    setFormData(prev => ({\n      ...prev,\n      [name]: formattedValue\n    }));\n\n    // Effacer l'erreur pour ce champ\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n  const validateForm = () => {\n    const newErrors = {};\n\n    // Validation identifiant\n    if (!formData.identifier) {\n      newErrors.identifier = userType === 'actifs' ? 'Le matricule solde est requis' : 'Le numéro de pension est requis';\n    } else if (userType === 'actifs') {\n      // Validation matricule solde pour les actifs\n      if (formData.identifier.length !== 13) {\n        newErrors.identifier = 'Le matricule doit contenir exactement 13 caractères';\n      } else if (!/^[0-9]{12}[A-Z]$/.test(formData.identifier)) {\n        newErrors.identifier = 'Format invalide : 12 chiffres suivis d\\'une lettre majuscule';\n      }\n    } else {\n      // Validation numéro de pension pour les retraités\n      if (!/^[0-9]+$/.test(formData.identifier)) {\n        newErrors.identifier = 'Le numéro de pension doit contenir uniquement des chiffres';\n      } else if (formData.identifier.length < 3) {\n        newErrors.identifier = 'Le numéro de pension doit contenir au moins 3 chiffres';\n      }\n    }\n\n    // Validation mot de passe\n    if (!formData.password) {\n      newErrors.password = 'Le mot de passe est requis';\n    } else if (formData.password.length < 8) {\n      newErrors.password = 'Le mot de passe doit contenir au moins 8 caractères';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    setLoading(true);\n    setMessage({\n      type: '',\n      text: ''\n    });\n    try {\n      const loginData = {\n        identifier: formData.identifier,\n        password: formData.password,\n        user_type: userType\n      };\n      console.log('Envoi des données:', loginData); // DEBUG\n\n      const response = await authService.standardLogin(loginData);\n      console.log('Réponse reçue:', response.data); // DEBUG\n\n      if (response.data.success) {\n        // Stocker le token d'authentification\n        localStorage.setItem('auth_token', response.data.token);\n        localStorage.setItem('user_data', JSON.stringify(response.data.user));\n        setMessage({\n          type: 'success',\n          text: 'Connexion réussie ! Redirection vers votre tableau de bord...'\n        });\n\n        // Rediriger vers le dashboard\n        setTimeout(() => {\n          navigate('/dashboard');\n        }, 2000);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response2$data;\n      console.error('Erreur de connexion complète:', error); // DEBUG\n      console.error('Détails de la réponse:', error.response); // DEBUG\n\n      if ((_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.errors) {\n        setErrors(error.response.data.errors);\n      } else if ((_error$response2 = error.response) !== null && _error$response2 !== void 0 && (_error$response2$data = _error$response2.data) !== null && _error$response2$data !== void 0 && _error$response2$data.message) {\n        setMessage({\n          type: 'error',\n          text: error.response.data.message\n        });\n      } else {\n        setMessage({\n          type: 'error',\n          text: 'Erreur de connexion. Vérifiez vos identifiants et votre connexion internet.'\n        });\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getIdentifierLabel = () => {\n    return userType === 'actifs' ? 'Matricule solde' : 'Numéro de pension';\n  };\n  const getIdentifierPlaceholder = () => {\n    return userType === 'actifs' ? '123456A' : '123456789';\n  };\n  const getIdentifierHelp = () => {\n    return userType === 'actifs' ? 'Votre matricule solde (6 chiffres + 1 lettre)' : 'Votre numéro de pension (chiffres uniquement)';\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"login-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"login-form__title\",\n      children: [\"Connexion standard - \", userType === 'actifs' ? 'Agents Actifs' : 'Retraités']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"login-form__subtitle\",\n      children: \"Utilisez vos identifiants configur\\xE9s pour acc\\xE9der \\xE0 votre espace personnel.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), message.text && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `login-form__message login-form__message--${message.type}`,\n      children: message.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form__group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"identifier\",\n        className: \"login-form__label\",\n        children: [getIdentifierLabel(), \" *\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"identifier\",\n        name: \"identifier\",\n        value: formData.identifier,\n        onChange: handleInputChange,\n        placeholder: getIdentifierPlaceholder(),\n        className: `login-form__input ${errors.identifier ? 'login-form__input--error' : ''}`,\n        required: true,\n        disabled: loading,\n        autoComplete: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), errors.identifier && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form__error\",\n        children: errors.identifier\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form__help\",\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: getIdentifierHelp()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form__group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        className: \"login-form__label\",\n        children: \"Mot de passe *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleInputChange,\n        placeholder: \"Votre mot de passe\",\n        className: `login-form__input ${errors.password ? 'login-form__input--error' : ''}`,\n        required: true,\n        disabled: loading,\n        autoComplete: \"current-password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form__error\",\n        children: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form__help\",\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Le mot de passe que vous avez cr\\xE9\\xE9 lors de votre premi\\xE8re connexion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"login-form__button\",\n      disabled: loading,\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form__loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-form__spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), \"Connexion en cours...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this) : 'Se connecter'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form__switch\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login-form__switch-text\",\n        children: \"Premi\\xE8re fois sur la plateforme ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"login-form__switch-button\",\n        onClick: () => onModeSwitch('first'),\n        disabled: loading,\n        children: \"Utiliser la premi\\xE8re connexion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(StandardLogin, \"OkebP5+69GkZiHrYULJttRdffvs=\", false, function () {\n  return [useNavigate];\n});\n_c = StandardLogin;\nexport default StandardLogin;\nvar _c;\n$RefreshReg$(_c, \"StandardLogin\");","map":{"version":3,"names":["React","useState","useNavigate","authService","jsxDEV","_jsxDEV","StandardLogin","userType","onModeSwitch","_s","navigate","formData","setFormData","identifier","password","errors","setErrors","loading","setLoading","message","setMessage","type","text","handleInputChange","e","name","value","target","formattedValue","replace","slice","prev","validateForm","newErrors","length","test","Object","keys","handleSubmit","preventDefault","loginData","user_type","console","log","response","standardLogin","data","success","localStorage","setItem","token","JSON","stringify","user","setTimeout","error","_error$response","_error$response$data","_error$response2","_error$response2$data","getIdentifierLabel","getIdentifierPlaceholder","getIdentifierHelp","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","placeholder","required","disabled","autoComplete","onClick","_c","$RefreshReg$"],"sources":["C:/Users/invite/Documents/servicescppf/frontend/src/components/StandardLogin.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { authService } from '../services/api';\r\n\r\nconst StandardLogin = ({ userType, onModeSwitch }) => {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    identifier: '',\r\n    password: ''\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState({ type: '', text: '' });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    \r\n    // Validation en temps réel pour l'identifiant\r\n    let formattedValue = value;\r\n    \r\n    if (name === 'identifier') {\r\n      if (userType === 'actifs') {\r\n        // Pour les actifs : matricule solde (6 chiffres + 1 lettre)\r\n        formattedValue = value.replace(/[^0-9A-Z]/g, '').slice(0, 7);\r\n      } else {\r\n        // Pour les retraités : numéro de pension (chiffres uniquement)\r\n        formattedValue = value.replace(/[^0-9]/g, '');\r\n      }\r\n    }\r\n    \r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: formattedValue\r\n    }));\r\n\r\n    // Effacer l'erreur pour ce champ\r\n    if (errors[name]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [name]: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n\r\n    // Validation identifiant\r\n    if (!formData.identifier) {\r\n      newErrors.identifier = userType === 'actifs' \r\n        ? 'Le matricule solde est requis' \r\n        : 'Le numéro de pension est requis';\r\n    } else if (userType === 'actifs') {\r\n      // Validation matricule solde pour les actifs\r\n      if (formData.identifier.length !== 13) {\r\n        newErrors.identifier = 'Le matricule doit contenir exactement 13 caractères';\r\n      } else if (!/^[0-9]{12}[A-Z]$/.test(formData.identifier)) {\r\n        newErrors.identifier = 'Format invalide : 12 chiffres suivis d\\'une lettre majuscule';\r\n      }\r\n    } else {\r\n      // Validation numéro de pension pour les retraités\r\n      if (!/^[0-9]+$/.test(formData.identifier)) {\r\n        newErrors.identifier = 'Le numéro de pension doit contenir uniquement des chiffres';\r\n      } else if (formData.identifier.length < 3) {\r\n        newErrors.identifier = 'Le numéro de pension doit contenir au moins 3 chiffres';\r\n      }\r\n    }\r\n\r\n    // Validation mot de passe\r\n    if (!formData.password) {\r\n      newErrors.password = 'Le mot de passe est requis';\r\n    } else if (formData.password.length < 8) {\r\n      newErrors.password = 'Le mot de passe doit contenir au moins 8 caractères';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setMessage({ type: '', text: '' });\r\n\r\n    try {\r\n      const loginData = {\r\n        identifier: formData.identifier,\r\n        password: formData.password,\r\n        user_type: userType\r\n      };\r\n\r\n      console.log('Envoi des données:', loginData); // DEBUG\r\n\r\n      const response = await authService.standardLogin(loginData);\r\n      \r\n      console.log('Réponse reçue:', response.data); // DEBUG\r\n\r\n      if (response.data.success) {\r\n        // Stocker le token d'authentification\r\n        localStorage.setItem('auth_token', response.data.token);\r\n        localStorage.setItem('user_data', JSON.stringify(response.data.user));\r\n        \r\n        setMessage({ \r\n          type: 'success', \r\n          text: 'Connexion réussie ! Redirection vers votre tableau de bord...' \r\n        });\r\n\r\n        // Rediriger vers le dashboard\r\n        setTimeout(() => {\r\n          navigate('/dashboard');\r\n        }, 2000);\r\n      }\r\n    } catch (error) {\r\n      console.error('Erreur de connexion complète:', error); // DEBUG\r\n      console.error('Détails de la réponse:', error.response); // DEBUG\r\n      \r\n      if (error.response?.data?.errors) {\r\n        setErrors(error.response.data.errors);\r\n      } else if (error.response?.data?.message) {\r\n        setMessage({ type: 'error', text: error.response.data.message });\r\n      } else {\r\n        setMessage({ \r\n          type: 'error', \r\n          text: 'Erreur de connexion. Vérifiez vos identifiants et votre connexion internet.' \r\n        });\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getIdentifierLabel = () => {\r\n    return userType === 'actifs' ? 'Matricule solde' : 'Numéro de pension';\r\n  };\r\n\r\n  const getIdentifierPlaceholder = () => {\r\n    return userType === 'actifs' ? '123456A' : '123456789';\r\n  };\r\n\r\n  const getIdentifierHelp = () => {\r\n    return userType === 'actifs' \r\n      ? 'Votre matricule solde (6 chiffres + 1 lettre)'\r\n      : 'Votre numéro de pension (chiffres uniquement)';\r\n  };\r\n\r\n  return (\r\n    <form className=\"login-form\" onSubmit={handleSubmit}>\r\n      <h2 className=\"login-form__title\">\r\n        Connexion standard - {userType === 'actifs' ? 'Agents Actifs' : 'Retraités'}\r\n      </h2>\r\n      <p className=\"login-form__subtitle\">\r\n        Utilisez vos identifiants configurés pour accéder à votre espace personnel.\r\n      </p>\r\n\r\n      {message.text && (\r\n        <div className={`login-form__message login-form__message--${message.type}`}>\r\n          {message.text}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"login-form__group\">\r\n        <label htmlFor=\"identifier\" className=\"login-form__label\">\r\n          {getIdentifierLabel()} *\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"identifier\"\r\n          name=\"identifier\"\r\n          value={formData.identifier}\r\n          onChange={handleInputChange}\r\n          placeholder={getIdentifierPlaceholder()}\r\n          className={`login-form__input ${errors.identifier ? 'login-form__input--error' : ''}`}\r\n          required\r\n          disabled={loading}\r\n          autoComplete=\"username\"\r\n        />\r\n        {errors.identifier && (\r\n          <div className=\"login-form__error\">{errors.identifier}</div>\r\n        )}\r\n        <div className=\"login-form__help\">\r\n          <small>{getIdentifierHelp()}</small>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"login-form__group\">\r\n        <label htmlFor=\"password\" className=\"login-form__label\">\r\n          Mot de passe *\r\n        </label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          value={formData.password}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Votre mot de passe\"\r\n          className={`login-form__input ${errors.password ? 'login-form__input--error' : ''}`}\r\n          required\r\n          disabled={loading}\r\n          autoComplete=\"current-password\"\r\n        />\r\n        {errors.password && (\r\n          <div className=\"login-form__error\">{errors.password}</div>\r\n        )}\r\n        <div className=\"login-form__help\">\r\n          <small>Le mot de passe que vous avez créé lors de votre première connexion</small>\r\n        </div>\r\n      </div>\r\n\r\n      <button \r\n        type=\"submit\" \r\n        className=\"login-form__button\"\r\n        disabled={loading}\r\n      >\r\n        {loading ? (\r\n          <div className=\"login-form__loading\">\r\n            <div className=\"login-form__spinner\"></div>\r\n            Connexion en cours...\r\n          </div>\r\n        ) : (\r\n          'Se connecter'\r\n        )}\r\n      </button>\r\n\r\n      <div className=\"login-form__switch\">\r\n        <p className=\"login-form__switch-text\">Première fois sur la plateforme ?</p>\r\n        <button \r\n          type=\"button\" \r\n          className=\"login-form__switch-button\"\r\n          onClick={() => onModeSwitch('first')}\r\n          disabled={loading}\r\n        >\r\n          Utiliser la première connexion\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default StandardLogin;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}