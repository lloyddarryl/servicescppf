{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\invite\\\\Desktop\\\\servicescppf\\\\frontend\\\\src\\\\components\\\\FirstLoginActifs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FirstLoginActifs = ({\n  onModeSwitch\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    matricule_solde: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState({\n    type: '',\n    text: ''\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // Validation en temps réel\n    let formattedValue = value;\n    if (name === 'matricule_solde') {\n      // Supprimer tous les caractères non alphanumériques\n      formattedValue = value.replace(/[^0-9A-Z]/g, '');\n      // Limiter à 13 caractères maximum\n      formattedValue = formattedValue.slice(0, 13);\n    }\n    if (name === 'password') {\n      // Supprimer tous les caractères non numériques\n      formattedValue = value.replace(/[^0-9]/g, '');\n      // Limiter à 12 chiffres maximum (pour le format 13 caractères)\n      formattedValue = formattedValue.slice(0, 12);\n    }\n    setFormData(prev => ({\n      ...prev,\n      [name]: formattedValue\n    }));\n\n    // Effacer l'erreur pour ce champ\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  };\n  const validateForm = () => {\n    const newErrors = {};\n\n    // Validation matricule solde\n    if (!formData.matricule_solde) {\n      newErrors.matricule_solde = 'Le matricule solde est requis';\n    } else {\n      const length = formData.matricule_solde.length;\n      if (length === 7) {\n        // Format 7 caractères : 6 chiffres + 1 lettre\n        if (!/^[0-9]{6}[A-Z]$/.test(formData.matricule_solde)) {\n          newErrors.matricule_solde = 'Format 7 caractères : 6 chiffres suivis d\\'une lettre majuscule';\n        }\n      } else if (length === 13) {\n        // Format 13 caractères : 12 chiffres + 1 lettre\n        if (!/^[0-9]{12}[A-Z]$/.test(formData.matricule_solde)) {\n          newErrors.matricule_solde = 'Format 13 caractères : 12 chiffres suivis d\\'une lettre majuscule';\n        }\n      } else if (length > 0 && length < 7) {\n        newErrors.matricule_solde = 'Matricule incomplet. Format attendu : 7 ou 13 caractères';\n      } else if (length > 7 && length < 13) {\n        newErrors.matricule_solde = 'Matricule incomplet. Format attendu : 7 ou 13 caractères';\n      } else if (length > 13) {\n        newErrors.matricule_solde = 'Matricule trop long. Maximum 13 caractères';\n      } else {\n        newErrors.matricule_solde = 'Format invalide. Attendu : 7 caractères (6 chiffres + 1 lettre) ou 13 caractères (12 chiffres + 1 lettre)';\n      }\n    }\n\n    // Validation mot de passe temporaire\n    if (!formData.password) {\n      newErrors.password = 'Le mot de passe temporaire est requis';\n    } else {\n      const matriculeLength = formData.matricule_solde.length;\n      if (matriculeLength === 7) {\n        // Pour le format 7 caractères, le mot de passe doit faire 6 chiffres\n        if (formData.password.length !== 6) {\n          newErrors.password = 'Le mot de passe doit contenir exactement 6 chiffres';\n        } else if (!/^[0-9]{6}$/.test(formData.password)) {\n          newErrors.password = 'Le mot de passe doit contenir uniquement des chiffres';\n        }\n      } else if (matriculeLength === 13) {\n        // Pour le format 13 caractères, le mot de passe doit faire 12 chiffres\n        if (formData.password.length !== 12) {\n          newErrors.password = 'Le mot de passe doit contenir exactement 12 chiffres';\n        } else if (!/^[0-9]{12}$/.test(formData.password)) {\n          newErrors.password = 'Le mot de passe doit contenir uniquement des chiffres';\n        }\n      }\n    }\n\n    // Vérifier que le mot de passe correspond aux chiffres du matricule\n    if (formData.matricule_solde.length === 7 && formData.password.length === 6) {\n      const matriculeNumbers = formData.matricule_solde.slice(0, 6);\n      if (matriculeNumbers !== formData.password) {\n        newErrors.password = 'Le mot de passe doit correspondre aux 6 premiers chiffres du matricule';\n      }\n    } else if (formData.matricule_solde.length === 13 && formData.password.length === 12) {\n      const matriculeNumbers = formData.matricule_solde.slice(0, 12);\n      if (matriculeNumbers !== formData.password) {\n        newErrors.password = 'Le mot de passe doit correspondre aux 12 premiers chiffres du matricule';\n      }\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    setLoading(true);\n    setMessage({\n      type: '',\n      text: ''\n    });\n    try {\n      const response = await api.post('/auth/first-login/actifs', formData);\n      if (response.data.success) {\n        // Stocker le token temporaire pour la configuration\n        localStorage.setItem('setup_token', response.data.token);\n        localStorage.setItem('user_data', JSON.stringify(response.data.user));\n        setMessage({\n          type: 'success',\n          text: 'Connexion réussie ! Redirection vers la configuration de votre profil...'\n        });\n\n        // Rediriger vers la page de configuration du profil\n        setTimeout(() => {\n          navigate('/setup-profile');\n        }, 2000);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response2$data;\n      console.error('Erreur de connexion:', error);\n      if ((_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && _error$response$data.errors) {\n        setErrors(error.response.data.errors);\n      } else if ((_error$response2 = error.response) !== null && _error$response2 !== void 0 && (_error$response2$data = _error$response2.data) !== null && _error$response2$data !== void 0 && _error$response2$data.message) {\n        if (error.response.data.redirect === 'standard_login') {\n          setMessage({\n            type: 'info',\n            text: error.response.data.message + ' Utilisez la connexion standard.'\n          });\n          setTimeout(() => onModeSwitch('standard'), 3000);\n        } else {\n          setMessage({\n            type: 'error',\n            text: error.response.data.message\n          });\n        }\n      } else {\n        setMessage({\n          type: 'error',\n          text: 'Erreur de connexion. Vérifiez votre connexion internet.'\n        });\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"login-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"login-form__title\",\n      children: \"Premi\\xE8re connexion - Agents Actifs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), message.text && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `login-form__message login-form__message--${message.type}`,\n      children: message.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form__group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"matricule_solde\",\n        className: \"login-form__label\",\n        children: \"Matricule solde *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"matricule_solde\",\n        name: \"matricule_solde\",\n        value: formData.matricule_solde,\n        onChange: handleInputChange,\n        placeholder: \"123456A ou 123456789012B\",\n        className: `login-form__input ${errors.matricule_solde ? 'login-form__input--error' : ''}`,\n        maxLength: 13,\n        required: true,\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), errors.matricule_solde && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form__error\",\n        children: errors.matricule_solde\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form__help\",\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Format accept\\xE9 : 7 caract\\xE8res (6 chiffres + 1 lettre) ou 13 caract\\xE8res (12 chiffres + 1 lettre)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form__group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        className: \"login-form__label\",\n        children: \"Mot de passe temporaire *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleInputChange,\n        placeholder: formData.matricule_solde.length === 13 ? \"123456789012\" : \"123456\",\n        className: `login-form__input ${errors.password ? 'login-form__input--error' : ''}`,\n        maxLength: 12,\n        required: true,\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form__error\",\n        children: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form__help\",\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: formData.matricule_solde.length === 13 ? \"Les 12 premiers chiffres de votre matricule solde\" : \"Les 6 premiers chiffres de votre matricule solde\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"login-form__button\",\n      disabled: loading,\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form__loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-form__spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), \"Connexion en cours...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this) : 'Se connecter'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form__switch\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"login-form__switch-text\",\n        children: \"D\\xE9j\\xE0 configur\\xE9 votre compte ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"login-form__switch-button\",\n        onClick: () => onModeSwitch('standard'),\n        disabled: loading,\n        children: \"Utiliser la connexion standard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n_s(FirstLoginActifs, \"TYfPD5fHXqT8O4m6yyCTaIMJIuw=\", false, function () {\n  return [useNavigate];\n});\n_c = FirstLoginActifs;\nexport default FirstLoginActifs;\nvar _c;\n$RefreshReg$(_c, \"FirstLoginActifs\");","map":{"version":3,"names":["React","useState","useNavigate","api","jsxDEV","_jsxDEV","FirstLoginActifs","onModeSwitch","_s","navigate","formData","setFormData","matricule_solde","password","errors","setErrors","loading","setLoading","message","setMessage","type","text","handleInputChange","e","name","value","target","formattedValue","replace","slice","prev","validateForm","newErrors","length","test","matriculeLength","matriculeNumbers","Object","keys","handleSubmit","preventDefault","response","post","data","success","localStorage","setItem","token","JSON","stringify","user","setTimeout","error","_error$response","_error$response$data","_error$response2","_error$response2$data","console","redirect","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","placeholder","maxLength","required","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/invite/Desktop/servicescppf/frontend/src/components/FirstLoginActifs.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport api from '../services/api';\r\n\r\nconst FirstLoginActifs = ({ onModeSwitch }) => {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    matricule_solde: '',\r\n    password: ''\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState({ type: '', text: '' });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    \r\n    // Validation en temps réel\r\n    let formattedValue = value;\r\n    \r\n    if (name === 'matricule_solde') {\r\n      // Supprimer tous les caractères non alphanumériques\r\n      formattedValue = value.replace(/[^0-9A-Z]/g, '');\r\n      // Limiter à 13 caractères maximum\r\n      formattedValue = formattedValue.slice(0, 13);\r\n    }\r\n    \r\n    if (name === 'password') {\r\n      // Supprimer tous les caractères non numériques\r\n      formattedValue = value.replace(/[^0-9]/g, '');\r\n      // Limiter à 12 chiffres maximum (pour le format 13 caractères)\r\n      formattedValue = formattedValue.slice(0, 12);\r\n    }\r\n\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: formattedValue\r\n    }));\r\n\r\n    // Effacer l'erreur pour ce champ\r\n    if (errors[name]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [name]: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n\r\n    // Validation matricule solde\r\n    if (!formData.matricule_solde) {\r\n      newErrors.matricule_solde = 'Le matricule solde est requis';\r\n    } else {\r\n      const length = formData.matricule_solde.length;\r\n      \r\n      if (length === 7) {\r\n        // Format 7 caractères : 6 chiffres + 1 lettre\r\n        if (!/^[0-9]{6}[A-Z]$/.test(formData.matricule_solde)) {\r\n          newErrors.matricule_solde = 'Format 7 caractères : 6 chiffres suivis d\\'une lettre majuscule';\r\n        }\r\n      } else if (length === 13) {\r\n        // Format 13 caractères : 12 chiffres + 1 lettre\r\n        if (!/^[0-9]{12}[A-Z]$/.test(formData.matricule_solde)) {\r\n          newErrors.matricule_solde = 'Format 13 caractères : 12 chiffres suivis d\\'une lettre majuscule';\r\n        }\r\n      } else if (length > 0 && length < 7) {\r\n        newErrors.matricule_solde = 'Matricule incomplet. Format attendu : 7 ou 13 caractères';\r\n      } else if (length > 7 && length < 13) {\r\n        newErrors.matricule_solde = 'Matricule incomplet. Format attendu : 7 ou 13 caractères';\r\n      } else if (length > 13) {\r\n        newErrors.matricule_solde = 'Matricule trop long. Maximum 13 caractères';\r\n      } else {\r\n        newErrors.matricule_solde = 'Format invalide. Attendu : 7 caractères (6 chiffres + 1 lettre) ou 13 caractères (12 chiffres + 1 lettre)';\r\n      }\r\n    }\r\n\r\n    // Validation mot de passe temporaire\r\n    if (!formData.password) {\r\n      newErrors.password = 'Le mot de passe temporaire est requis';\r\n    } else {\r\n      const matriculeLength = formData.matricule_solde.length;\r\n      \r\n      if (matriculeLength === 7) {\r\n        // Pour le format 7 caractères, le mot de passe doit faire 6 chiffres\r\n        if (formData.password.length !== 6) {\r\n          newErrors.password = 'Le mot de passe doit contenir exactement 6 chiffres';\r\n        } else if (!/^[0-9]{6}$/.test(formData.password)) {\r\n          newErrors.password = 'Le mot de passe doit contenir uniquement des chiffres';\r\n        }\r\n      } else if (matriculeLength === 13) {\r\n        // Pour le format 13 caractères, le mot de passe doit faire 12 chiffres\r\n        if (formData.password.length !== 12) {\r\n          newErrors.password = 'Le mot de passe doit contenir exactement 12 chiffres';\r\n        } else if (!/^[0-9]{12}$/.test(formData.password)) {\r\n          newErrors.password = 'Le mot de passe doit contenir uniquement des chiffres';\r\n        }\r\n      }\r\n    }\r\n\r\n    // Vérifier que le mot de passe correspond aux chiffres du matricule\r\n    if (formData.matricule_solde.length === 7 && formData.password.length === 6) {\r\n      const matriculeNumbers = formData.matricule_solde.slice(0, 6);\r\n      if (matriculeNumbers !== formData.password) {\r\n        newErrors.password = 'Le mot de passe doit correspondre aux 6 premiers chiffres du matricule';\r\n      }\r\n    } else if (formData.matricule_solde.length === 13 && formData.password.length === 12) {\r\n      const matriculeNumbers = formData.matricule_solde.slice(0, 12);\r\n      if (matriculeNumbers !== formData.password) {\r\n        newErrors.password = 'Le mot de passe doit correspondre aux 12 premiers chiffres du matricule';\r\n      }\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setMessage({ type: '', text: '' });\r\n\r\n    try {\r\n      const response = await api.post('/auth/first-login/actifs', formData);\r\n\r\n      if (response.data.success) {\r\n        // Stocker le token temporaire pour la configuration\r\n        localStorage.setItem('setup_token', response.data.token);\r\n        localStorage.setItem('user_data', JSON.stringify(response.data.user));\r\n        \r\n        setMessage({ \r\n          type: 'success', \r\n          text: 'Connexion réussie ! Redirection vers la configuration de votre profil...' \r\n        });\r\n\r\n        // Rediriger vers la page de configuration du profil\r\n        setTimeout(() => {\r\n          navigate('/setup-profile');\r\n        }, 2000);\r\n      }\r\n    } catch (error) {\r\n      console.error('Erreur de connexion:', error);\r\n      \r\n      if (error.response?.data?.errors) {\r\n        setErrors(error.response.data.errors);\r\n      } else if (error.response?.data?.message) {\r\n        if (error.response.data.redirect === 'standard_login') {\r\n          setMessage({ \r\n            type: 'info', \r\n            text: error.response.data.message + ' Utilisez la connexion standard.' \r\n          });\r\n          setTimeout(() => onModeSwitch('standard'), 3000);\r\n        } else {\r\n          setMessage({ type: 'error', text: error.response.data.message });\r\n        }\r\n      } else {\r\n        setMessage({ \r\n          type: 'error', \r\n          text: 'Erreur de connexion. Vérifiez votre connexion internet.' \r\n        });\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"login-form\" onSubmit={handleSubmit}>\r\n      <h2 className=\"login-form__title\">Première connexion - Agents Actifs</h2>\r\n      \r\n\r\n      {message.text && (\r\n        <div className={`login-form__message login-form__message--${message.type}`}>\r\n          {message.text}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"login-form__group\">\r\n        <label htmlFor=\"matricule_solde\" className=\"login-form__label\">\r\n          Matricule solde *\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"matricule_solde\"\r\n          name=\"matricule_solde\"\r\n          value={formData.matricule_solde}\r\n          onChange={handleInputChange}\r\n          placeholder=\"123456A ou 123456789012B\"\r\n          className={`login-form__input ${errors.matricule_solde ? 'login-form__input--error' : ''}`}\r\n          maxLength={13}\r\n          required\r\n          disabled={loading}\r\n        />\r\n        {errors.matricule_solde && (\r\n          <div className=\"login-form__error\">{errors.matricule_solde}</div>\r\n        )}\r\n        <div className=\"login-form__help\">\r\n          <small>Format accepté : 7 caractères (6 chiffres + 1 lettre) ou 13 caractères (12 chiffres + 1 lettre)</small>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"login-form__group\">\r\n        <label htmlFor=\"password\" className=\"login-form__label\">\r\n          Mot de passe temporaire *\r\n        </label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          value={formData.password}\r\n          onChange={handleInputChange}\r\n          placeholder={formData.matricule_solde.length === 13 ? \"123456789012\" : \"123456\"}\r\n          className={`login-form__input ${errors.password ? 'login-form__input--error' : ''}`}\r\n          maxLength={12}\r\n          required\r\n          disabled={loading}\r\n        />\r\n        {errors.password && (\r\n          <div className=\"login-form__error\">{errors.password}</div>\r\n        )}\r\n        <div className=\"login-form__help\">\r\n          <small>\r\n            {formData.matricule_solde.length === 13 \r\n              ? \"Les 12 premiers chiffres de votre matricule solde\"\r\n              : \"Les 6 premiers chiffres de votre matricule solde\"\r\n            }\r\n          </small>\r\n        </div>\r\n      </div>\r\n\r\n      <button \r\n        type=\"submit\" \r\n        className=\"login-form__button\"\r\n        disabled={loading}\r\n      >\r\n        {loading ? (\r\n          <div className=\"login-form__loading\">\r\n            <div className=\"login-form__spinner\"></div>\r\n            Connexion en cours...\r\n          </div>\r\n        ) : (\r\n          'Se connecter'\r\n        )}\r\n      </button>\r\n\r\n      <div className=\"login-form__switch\">\r\n        <p className=\"login-form__switch-text\">Déjà configuré votre compte ?</p>\r\n        <button \r\n          type=\"button\" \r\n          className=\"login-form__switch-button\"\r\n          onClick={() => onModeSwitch('standard')}\r\n          disabled={loading}\r\n        >\r\n          Utiliser la connexion standard\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FirstLoginActifs;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}