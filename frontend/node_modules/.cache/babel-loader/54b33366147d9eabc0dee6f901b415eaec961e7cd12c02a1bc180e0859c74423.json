{"ast":null,"code":"// File: frontend/src/services/api.js - Services famille universels\n\nimport axios from 'axios';\n\n// Configuration de base de l'API\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\n\n// Créer une instance axios\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  timeout: 30000\n});\n\n// Intercepteur pour ajouter le token d'authentification\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('auth_token') || localStorage.getItem('setup_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Intercepteur pour gérer les réponses et erreurs\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response, _error$response2, _error$config, _error$config2, _error$response3;\n  console.error('API Error:', {\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data,\n    url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n    method: (_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : _error$config2.method\n  });\n\n  // Gestion des erreurs d'authentification\n  if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n    localStorage.removeItem('auth_token');\n    localStorage.removeItem('setup_token');\n    localStorage.removeItem('user_data');\n    if (!window.location.pathname.includes('/login')) {\n      window.location.href = '/services';\n    }\n  }\n  return Promise.reject(error);\n});\n\n// Services d'authentification\nexport const authService = {\n  firstLoginActifs: data => api.post('/auth/first-login/actifs', data),\n  firstLoginRetraites: data => api.post('/auth/first-login/retraites', data),\n  setupProfile: data => api.post('/auth/setup-profile', data),\n  standardLogin: data => api.post('/auth/standard-login', data),\n  logout: () => api.post('/auth/logout'),\n  verifyToken: () => api.get('/auth/verify'),\n  getCurrentUser: () => api.get('/auth/user'),\n  verifyPhone: data => api.post('/auth/verify-phone-setup', data),\n  resendVerification: () => api.post('/auth/resend-verification-setup')\n};\n\n// Services utilisateur\nexport const userService = {\n  getProfile: () => api.get('/profile'),\n  updateProfile: data => api.put('/profile', data),\n  changePassword: data => api.put('/profile/password', data),\n  verifyPhone: data => api.post('/profile/verify-phone', data),\n  resendVerification: () => api.post('/profile/resend-verification')\n};\n\n// Services pour le simulateur de pension (actifs uniquement)\nexport const pensionSimulatorService = {\n  getProfile: () => api.get('/actifs/simulateur-pension/profil'),\n  simulate: data => api.post('/actifs/simulateur-pension/simuler', data),\n  getHistory: () => api.get('/actifs/simulateur-pension/historique'),\n  getParameters: () => api.get('/actifs/simulateur-pension/parametres')\n};\n\n// Services pour les agents actifs\nexport const agentService = {\n  getDashboard: () => api.get('/actifs/dashboard'),\n  getAttestations: () => api.get('/actifs/attestations'),\n  requestAttestation: data => api.post('/actifs/attestations', data),\n  getPrestations: () => api.get('/actifs/prestations'),\n  getCotisations: () => api.get('/actifs/cotisations')\n};\n\n// Services pour les retraités\nexport const retraiteService = {\n  getDashboard: () => api.get('/retraites/dashboard'),\n  getPensionInfo: () => api.get('/retraites/pension'),\n  getCertificatsVie: () => api.get('/retraites/certificats-vie'),\n  submitCertificatVie: data => api.post('/retraites/certificats-vie', data),\n  getHistorique: () => api.get('/retraites/historique')\n};\nexport const familleService = {\n  // Obtenir la grappe familiale complète\n  getGrappeFamiliale: () => {\n    const userType = localStorage.getItem('user_type');\n    console.log('Type utilisateur:', userType); // Debug\n\n    if (userType === 'retraite') {\n      return api.get('/retraites/famille');\n    } else {\n      return api.get('/actifs/famille');\n    }\n  },\n  // Gestion du conjoint\n  saveConjoint: data => {\n    const userType = localStorage.getItem('user_type');\n    const endpoint = userType === 'retraite' ? '/retraites/famille/conjoint' : '/actifs/famille/conjoint';\n    return api.post(endpoint, data);\n  },\n  // Gestion des enfants\n  addEnfant: data => {\n    const userType = localStorage.getItem('user_type');\n    const endpoint = userType === 'retraite' ? '/retraites/famille/enfants' : '/actifs/famille/enfants';\n    return api.post(endpoint, data);\n  },\n  updateEnfant: (id, data) => {\n    const userType = localStorage.getItem('user_type');\n    const endpoint = userType === 'retraite' ? `/retraites/famille/enfants/${id}` : `/actifs/famille/enfants/${id}`;\n    return api.put(endpoint, data);\n  },\n  deleteEnfant: id => {\n    const userType = localStorage.getItem('user_type');\n    const endpoint = userType === 'retraite' ? `/retraites/famille/enfants/${id}` : `/actifs/famille/enfants/${id}`;\n    return api.delete(endpoint);\n  }\n};\n\n// Services pour les réclamations (universels actifs/retraités)\nexport const reclamationService = {\n  // Obtenir les types de réclamations disponibles\n  getTypes: () => {\n    const userType = localStorage.getItem('user_type');\n    const endpoint = userType === 'retraite' ? '/retraites/reclamations/types' : '/actifs/reclamations/types';\n    return api.get(endpoint);\n  },\n  // Obtenir toutes les réclamations de l'utilisateur\n  getAll: (params = {}) => {\n    const userType = localStorage.getItem('user_type');\n    const endpoint = userType === 'retraite' ? '/retraites/reclamations' : '/actifs/reclamations';\n    const queryParams = new URLSearchParams(params).toString();\n    const url = queryParams ? `${endpoint}?${queryParams}` : endpoint;\n    return api.get(url);\n  },\n  // Créer une nouvelle réclamation\n  create: formData => {\n    const userType = localStorage.getItem('user_type');\n    const endpoint = userType === 'retraite' ? '/retraites/reclamations' : '/actifs/reclamations';\n    return api.post(endpoint, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  // Obtenir une réclamation spécifique\n  getById: id => {\n    const userType = localStorage.getItem('user_type');\n    const endpoint = userType === 'retraite' ? `/retraites/reclamations/${id}` : `/actifs/reclamations/${id}`;\n    return api.get(endpoint);\n  },\n  // Télécharger un document de réclamation\n  downloadDocument: (reclamationId, documentIndex) => {\n    const userType = localStorage.getItem('user_type');\n    const endpoint = userType === 'retraite' ? `/retraites/reclamations/${reclamationId}/documents/${documentIndex}` : `/actifs/reclamations/${reclamationId}/documents/${documentIndex}`;\n    return api.get(endpoint, {\n      responseType: 'blob'\n    });\n  },\n  // Utilitaires pour les réclamations\n  utils: {\n    // Formater la taille des fichiers\n    formatFileSize: bytes => {\n      if (bytes === 0) return '0 B';\n      const k = 1024;\n      const sizes = ['B', 'KB', 'MB', 'GB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i];\n    },\n    validateFile: (file, maxSize = 5 * 1024 * 1024) => {\n      const allowedTypes = ['pdf', 'doc', 'docx', 'jpg', 'jpeg', 'png'];\n      const extension = file.name.split('.').pop().toLowerCase();\n      const errors = [];\n      if (!allowedTypes.includes(extension)) {\n        errors.push('Type de fichier non autorisé');\n      }\n      if (file.size > maxSize) {\n        errors.push('Fichier trop volumineux (max 5MB)');\n      }\n      return {\n        isValid: errors.length === 0,\n        errors\n      };\n    },\n    getReclamationIcon: type => {\n      const icons = {\n        'cotisation': '💰',\n        'prestation': '🎁',\n        'pension': '💵',\n        'attestation': '📄',\n        'compte': '👤',\n        'service_client': '📞',\n        'technique': '⚙️',\n        'autre': '❓'\n      };\n      return icons[type] || '📋';\n    },\n    getStatusColor: statut => {\n      const colors = {\n        'en_attente': '#F59E0B',\n        'en_cours': '#3B82F6',\n        'en_revision': '#8B5CF6',\n        'resolu': '#10B981',\n        'ferme': '#6B7280',\n        'rejete': '#EF4444'\n      };\n      return colors[statut] || '#6B7280';\n    },\n    getPriorityColor: priorite => {\n      const colors = {\n        'basse': '#10B981',\n        'normale': '#3B82F6',\n        'haute': '#F59E0B',\n        'urgente': '#EF4444'\n      };\n      return colors[priorite] || '#3B82F6';\n    }\n  }\n};\n\n// Utilitaires\nexport const utils = {\n  formatValidationErrors: errors => {\n    const formattedErrors = {};\n    for (const field in errors) {\n      formattedErrors[field] = errors[field][0];\n    }\n    return formattedErrors;\n  },\n  isAuthenticated: () => {\n    const token = localStorage.getItem('auth_token');\n    return !!token;\n  },\n  getUserData: () => {\n    const userData = localStorage.getItem('user_data');\n    return userData ? JSON.parse(userData) : null;\n  },\n  setUserData: userData => {\n    localStorage.setItem('user_data', JSON.stringify(userData));\n  },\n  clearSession: () => {\n    localStorage.removeItem('auth_token');\n    localStorage.removeItem('setup_token');\n    localStorage.removeItem('user_data');\n    localStorage.removeItem('user_type');\n  },\n  formatPhoneNumber: phone => {\n    if (!phone) return '';\n    const cleaned = phone.replace(/\\D/g, '');\n    if (cleaned.length === 8 || cleaned.length === 9) {\n      return `+241${cleaned}`;\n    }\n    return phone;\n  },\n  validateMatriculeSolde: matricule => {\n    return /^[0-9]{6}[A-Z]$/.test(matricule);\n  },\n  validateNumeroPension: numero => {\n    return /^[0-9]+$/.test(numero);\n  },\n  formatCurrency: amount => {\n    if (!amount) return '0 FCFA';\n    return new Intl.NumberFormat('fr-FR', {\n      style: 'currency',\n      currency: 'XAF',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(amount).replace('XAF', 'FCFA');\n  },\n  formatDate: date => {\n    if (!date) return '';\n    return new Date(date).toLocaleDateString('fr-FR', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  },\n  calculateAge: birthDate => {\n    if (!birthDate) return 0;\n    const today = new Date();\n    const birth = new Date(birthDate);\n    let age = today.getFullYear() - birth.getFullYear();\n    const monthDiff = today.getMonth() - birth.getMonth();\n    if (monthDiff < 0 || monthDiff === 0 && today.getDate() < birth.getDate()) {\n      age--;\n    }\n    return age;\n  },\n  // Ajoutez ces nouvelles méthodes à l'objet utils existant\n  generateReclamationReference: () => {\n    const now = new Date();\n    const prefix = `REC-${now.getFullYear()}${(now.getMonth() + 1).toString().padStart(2, '0')}`;\n    const suffix = Math.random().toString(36).substr(2, 6).toUpperCase();\n    return `${prefix}-${suffix}`;\n  },\n  formatDateReclamation: date => {\n    if (!date) return '';\n    const dateObj = new Date(date);\n    return dateObj.toLocaleDateString('fr-FR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  },\n  getTimeElapsed: date => {\n    if (!date) return '';\n    const now = new Date();\n    const past = new Date(date);\n    const diffMs = now - past;\n    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\n    const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\n    const diffMinutes = Math.floor(diffMs / (1000 * 60));\n    if (diffDays > 0) {\n      return `Il y a ${diffDays} jour${diffDays > 1 ? 's' : ''}`;\n    } else if (diffHours > 0) {\n      return `Il y a ${diffHours} heure${diffHours > 1 ? 's' : ''}`;\n    } else if (diffMinutes > 0) {\n      return `Il y a ${diffMinutes} minute${diffMinutes > 1 ? 's' : ''}`;\n    } else {\n      return 'À l\\'instant';\n    }\n  },\n  validateReclamationDescription: description => {\n    const errors = [];\n    if (!description || !description.trim()) {\n      errors.push('La description est obligatoire');\n    } else {\n      if (description.trim().length < 10) {\n        errors.push('La description doit contenir au moins 10 caractères');\n      }\n      if (description.trim().length > 2000) {\n        errors.push('La description ne peut pas dépasser 2000 caractères');\n      }\n    }\n    return {\n      isValid: errors.length === 0,\n      errors\n    };\n  },\n  getReclamationNotificationMessage: (action, data = {}) => {\n    switch (action) {\n      case 'created':\n        return `Réclamation créée avec succès ! N° ${data.numero || 'N/A'}`;\n      case 'updated':\n        return 'Réclamation mise à jour avec succès';\n      case 'status_changed':\n        return `Statut de votre réclamation changé : ${data.statut || 'Mis à jour'}`;\n      case 'document_uploaded':\n        return 'Document ajouté avec succès';\n      case 'error':\n        return data.message || 'Une erreur est survenue';\n      default:\n        return 'Action effectuée avec succès';\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","timeout","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","_error$response2","_error$config","_error$config2","_error$response3","console","status","data","url","method","removeItem","window","location","pathname","includes","href","authService","firstLoginActifs","post","firstLoginRetraites","setupProfile","standardLogin","logout","verifyToken","get","getCurrentUser","verifyPhone","resendVerification","userService","getProfile","updateProfile","put","changePassword","pensionSimulatorService","simulate","getHistory","getParameters","agentService","getDashboard","getAttestations","requestAttestation","getPrestations","getCotisations","retraiteService","getPensionInfo","getCertificatsVie","submitCertificatVie","getHistorique","familleService","getGrappeFamiliale","userType","log","saveConjoint","endpoint","addEnfant","updateEnfant","id","deleteEnfant","delete","reclamationService","getTypes","getAll","params","queryParams","URLSearchParams","toString","formData","getById","downloadDocument","reclamationId","documentIndex","responseType","utils","formatFileSize","bytes","k","sizes","i","Math","floor","parseFloat","pow","toFixed","validateFile","file","maxSize","allowedTypes","extension","name","split","pop","toLowerCase","errors","push","size","isValid","length","getReclamationIcon","type","icons","getStatusColor","statut","colors","getPriorityColor","priorite","formatValidationErrors","formattedErrors","field","isAuthenticated","getUserData","userData","JSON","parse","setUserData","setItem","stringify","clearSession","formatPhoneNumber","phone","cleaned","replace","validateMatriculeSolde","matricule","test","validateNumeroPension","numero","formatCurrency","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatDate","date","Date","toLocaleDateString","year","month","day","calculateAge","birthDate","today","birth","age","getFullYear","monthDiff","getMonth","getDate","generateReclamationReference","now","prefix","padStart","suffix","random","substr","toUpperCase","formatDateReclamation","dateObj","hour","minute","getTimeElapsed","past","diffMs","diffDays","diffHours","diffMinutes","validateReclamationDescription","description","trim","getReclamationNotificationMessage","action","message"],"sources":["C:/Users/invite/Downloads/servicescppf/servicescppf/frontend/src/services/api.js"],"sourcesContent":["// File: frontend/src/services/api.js - Services famille universels\r\n\r\nimport axios from 'axios';\r\n\r\n// Configuration de base de l'API\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\r\n\r\n// Créer une instance axios\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json',\r\n  },\r\n  timeout: 30000,\r\n});\r\n\r\n// Intercepteur pour ajouter le token d'authentification\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('auth_token') || localStorage.getItem('setup_token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Intercepteur pour gérer les réponses et erreurs\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('API Error:', {\r\n      status: error.response?.status,\r\n      data: error.response?.data,\r\n      url: error.config?.url,\r\n      method: error.config?.method\r\n    });\r\n    \r\n    // Gestion des erreurs d'authentification\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('auth_token');\r\n      localStorage.removeItem('setup_token');\r\n      localStorage.removeItem('user_data');\r\n      \r\n      if (!window.location.pathname.includes('/login')) {\r\n        window.location.href = '/services';\r\n      }\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Services d'authentification\r\nexport const authService = {\r\n  firstLoginActifs: (data) => api.post('/auth/first-login/actifs', data),\r\n  firstLoginRetraites: (data) => api.post('/auth/first-login/retraites', data),\r\n  setupProfile: (data) => api.post('/auth/setup-profile', data),\r\n  standardLogin: (data) => api.post('/auth/standard-login', data),\r\n  logout: () => api.post('/auth/logout'),\r\n  verifyToken: () => api.get('/auth/verify'),\r\n  getCurrentUser: () => api.get('/auth/user'),\r\n  verifyPhone: (data) => api.post('/auth/verify-phone-setup', data),\r\n  resendVerification: () => api.post('/auth/resend-verification-setup')\r\n};\r\n\r\n// Services utilisateur\r\nexport const userService = {\r\n  getProfile: () => api.get('/profile'),\r\n  updateProfile: (data) => api.put('/profile', data),\r\n  changePassword: (data) => api.put('/profile/password', data),\r\n  verifyPhone: (data) => api.post('/profile/verify-phone', data),\r\n  resendVerification: () => api.post('/profile/resend-verification')\r\n};\r\n\r\n// Services pour le simulateur de pension (actifs uniquement)\r\nexport const pensionSimulatorService = {\r\n  getProfile: () => api.get('/actifs/simulateur-pension/profil'),\r\n  simulate: (data) => api.post('/actifs/simulateur-pension/simuler', data),\r\n  getHistory: () => api.get('/actifs/simulateur-pension/historique'),\r\n  getParameters: () => api.get('/actifs/simulateur-pension/parametres')\r\n};\r\n\r\n// Services pour les agents actifs\r\nexport const agentService = {\r\n  getDashboard: () => api.get('/actifs/dashboard'),\r\n  getAttestations: () => api.get('/actifs/attestations'),\r\n  requestAttestation: (data) => api.post('/actifs/attestations', data),\r\n  getPrestations: () => api.get('/actifs/prestations'),\r\n  getCotisations: () => api.get('/actifs/cotisations'),\r\n};\r\n\r\n// Services pour les retraités\r\nexport const retraiteService = {\r\n  getDashboard: () => api.get('/retraites/dashboard'),\r\n  getPensionInfo: () => api.get('/retraites/pension'),\r\n  getCertificatsVie: () => api.get('/retraites/certificats-vie'),\r\n  submitCertificatVie: (data) => api.post('/retraites/certificats-vie', data),\r\n  getHistorique: () => api.get('/retraites/historique'),\r\n};\r\n\r\nexport const familleService = {\r\n  // Obtenir la grappe familiale complète\r\n  getGrappeFamiliale: () => {\r\n    const userType = localStorage.getItem('user_type');\r\n    console.log('Type utilisateur:', userType); // Debug\r\n    \r\n    if (userType === 'retraite') {\r\n      return api.get('/retraites/famille'); \r\n    } else {\r\n      return api.get('/actifs/famille'); \r\n    }\r\n  },\r\n  \r\n  // Gestion du conjoint\r\n  saveConjoint: (data) => {\r\n    const userType = localStorage.getItem('user_type');\r\n    const endpoint = userType === 'retraite' ? '/retraites/famille/conjoint' : '/actifs/famille/conjoint';\r\n    return api.post(endpoint, data);\r\n  },\r\n  \r\n  // Gestion des enfants\r\n  addEnfant: (data) => {\r\n    const userType = localStorage.getItem('user_type');\r\n    const endpoint = userType === 'retraite' ? '/retraites/famille/enfants' : '/actifs/famille/enfants';\r\n    return api.post(endpoint, data);\r\n  },\r\n  \r\n  updateEnfant: (id, data) => {\r\n    const userType = localStorage.getItem('user_type');\r\n    const endpoint = userType === 'retraite' ? `/retraites/famille/enfants/${id}` : `/actifs/famille/enfants/${id}`;\r\n    return api.put(endpoint, data);\r\n  },\r\n  \r\n  deleteEnfant: (id) => {\r\n    const userType = localStorage.getItem('user_type');\r\n    const endpoint = userType === 'retraite' ? `/retraites/famille/enfants/${id}` : `/actifs/famille/enfants/${id}`;\r\n    return api.delete(endpoint);\r\n  }\r\n};\r\n\r\n// Services pour les réclamations (universels actifs/retraités)\r\nexport const reclamationService = {\r\n  // Obtenir les types de réclamations disponibles\r\n  getTypes: () => {\r\n    const userType = localStorage.getItem('user_type');\r\n    const endpoint = userType === 'retraite' ? '/retraites/reclamations/types' : '/actifs/reclamations/types';\r\n    return api.get(endpoint);\r\n  },\r\n\r\n  // Obtenir toutes les réclamations de l'utilisateur\r\n  getAll: (params = {}) => {\r\n    const userType = localStorage.getItem('user_type');\r\n    const endpoint = userType === 'retraite' ? '/retraites/reclamations' : '/actifs/reclamations';\r\n    \r\n    const queryParams = new URLSearchParams(params).toString();\r\n    const url = queryParams ? `${endpoint}?${queryParams}` : endpoint;\r\n    \r\n    return api.get(url);\r\n  },\r\n\r\n  // Créer une nouvelle réclamation\r\n  create: (formData) => {\r\n    const userType = localStorage.getItem('user_type');\r\n    const endpoint = userType === 'retraite' ? '/retraites/reclamations' : '/actifs/reclamations';\r\n    \r\n    return api.post(endpoint, formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    });\r\n  },\r\n\r\n  // Obtenir une réclamation spécifique\r\n  getById: (id) => {\r\n    const userType = localStorage.getItem('user_type');\r\n    const endpoint = userType === 'retraite' ? `/retraites/reclamations/${id}` : `/actifs/reclamations/${id}`;\r\n    return api.get(endpoint);\r\n  },\r\n\r\n  // Télécharger un document de réclamation\r\n  downloadDocument: (reclamationId, documentIndex) => {\r\n    const userType = localStorage.getItem('user_type');\r\n    const endpoint = userType === 'retraite' \r\n      ? `/retraites/reclamations/${reclamationId}/documents/${documentIndex}` \r\n      : `/actifs/reclamations/${reclamationId}/documents/${documentIndex}`;\r\n    \r\n    return api.get(endpoint, {\r\n      responseType: 'blob'\r\n    });\r\n  },\r\n\r\n  // Utilitaires pour les réclamations\r\n  utils: {\r\n    // Formater la taille des fichiers\r\n    formatFileSize: (bytes) => {\r\n      if (bytes === 0) return '0 B';\r\n      const k = 1024;\r\n      const sizes = ['B', 'KB', 'MB', 'GB'];\r\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(1)) + ' ' + sizes[i];\r\n    },\r\n\r\n    validateFile: (file, maxSize = 5 * 1024 * 1024) => {\r\n      const allowedTypes = ['pdf', 'doc', 'docx', 'jpg', 'jpeg', 'png'];\r\n      const extension = file.name.split('.').pop().toLowerCase();\r\n      \r\n      const errors = [];\r\n      \r\n      if (!allowedTypes.includes(extension)) {\r\n        errors.push('Type de fichier non autorisé');\r\n      }\r\n      \r\n      if (file.size > maxSize) {\r\n        errors.push('Fichier trop volumineux (max 5MB)');\r\n      }\r\n      \r\n      return {\r\n        isValid: errors.length === 0,\r\n        errors\r\n      };\r\n    },\r\n\r\n    getReclamationIcon: (type) => {\r\n      const icons = {\r\n        'cotisation': '💰',\r\n        'prestation': '🎁',\r\n        'pension': '💵',\r\n        'attestation': '📄',\r\n        'compte': '👤',\r\n        'service_client': '📞',\r\n        'technique': '⚙️',\r\n        'autre': '❓'\r\n      };\r\n      return icons[type] || '📋';\r\n    },\r\n\r\n    getStatusColor: (statut) => {\r\n      const colors = {\r\n        'en_attente': '#F59E0B',\r\n        'en_cours': '#3B82F6',\r\n        'en_revision': '#8B5CF6',\r\n        'resolu': '#10B981',\r\n        'ferme': '#6B7280',\r\n        'rejete': '#EF4444'\r\n      };\r\n      return colors[statut] || '#6B7280';\r\n    },\r\n\r\n    getPriorityColor: (priorite) => {\r\n      const colors = {\r\n        'basse': '#10B981',\r\n        'normale': '#3B82F6',\r\n        'haute': '#F59E0B',\r\n        'urgente': '#EF4444'\r\n      };\r\n      return colors[priorite] || '#3B82F6';\r\n    }\r\n  }\r\n};\r\n\r\n// Utilitaires\r\nexport const utils = {\r\n  formatValidationErrors: (errors) => {\r\n    const formattedErrors = {};\r\n    for (const field in errors) {\r\n      formattedErrors[field] = errors[field][0];\r\n    }\r\n    return formattedErrors;\r\n  },\r\n  \r\n  isAuthenticated: () => {\r\n    const token = localStorage.getItem('auth_token');\r\n    return !!token;\r\n  },\r\n  \r\n  getUserData: () => {\r\n    const userData = localStorage.getItem('user_data');\r\n    return userData ? JSON.parse(userData) : null;\r\n  },\r\n  \r\n  setUserData: (userData) => {\r\n    localStorage.setItem('user_data', JSON.stringify(userData));\r\n  },\r\n  \r\n  clearSession: () => {\r\n    localStorage.removeItem('auth_token');\r\n    localStorage.removeItem('setup_token');\r\n    localStorage.removeItem('user_data');\r\n    localStorage.removeItem('user_type');\r\n  },\r\n  \r\n  formatPhoneNumber: (phone) => {\r\n    if (!phone) return '';\r\n    const cleaned = phone.replace(/\\D/g, '');\r\n    if (cleaned.length === 8 || cleaned.length === 9) {\r\n      return `+241${cleaned}`;\r\n    }\r\n    return phone;\r\n  },\r\n  \r\n  validateMatriculeSolde: (matricule) => {\r\n    return /^[0-9]{6}[A-Z]$/.test(matricule);\r\n  },\r\n  \r\n  validateNumeroPension: (numero) => {\r\n    return /^[0-9]+$/.test(numero);\r\n  },\r\n  \r\n  formatCurrency: (amount) => {\r\n    if (!amount) return '0 FCFA';\r\n    return new Intl.NumberFormat('fr-FR', {\r\n      style: 'currency',\r\n      currency: 'XAF',\r\n      minimumFractionDigits: 0,\r\n      maximumFractionDigits: 0,\r\n    }).format(amount).replace('XAF', 'FCFA');\r\n  },\r\n  \r\n  formatDate: (date) => {\r\n    if (!date) return '';\r\n    return new Date(date).toLocaleDateString('fr-FR', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n    });\r\n  },\r\n  \r\n  calculateAge: (birthDate) => {\r\n    if (!birthDate) return 0;\r\n    const today = new Date();\r\n    const birth = new Date(birthDate);\r\n    let age = today.getFullYear() - birth.getFullYear();\r\n    const monthDiff = today.getMonth() - birth.getMonth();\r\n    \r\n    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birth.getDate())) {\r\n      age--;\r\n    }\r\n    \r\n    return age;\r\n  },\r\n\r\n  // Ajoutez ces nouvelles méthodes à l'objet utils existant\r\n  generateReclamationReference: () => {\r\n    const now = new Date();\r\n    const prefix = `REC-${now.getFullYear()}${(now.getMonth() + 1).toString().padStart(2, '0')}`;\r\n    const suffix = Math.random().toString(36).substr(2, 6).toUpperCase();\r\n    return `${prefix}-${suffix}`;\r\n  },\r\n\r\n  formatDateReclamation: (date) => {\r\n    if (!date) return '';\r\n    const dateObj = new Date(date);\r\n    return dateObj.toLocaleDateString('fr-FR', {\r\n      day: '2-digit',\r\n      month: '2-digit',\r\n      year: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  },\r\n\r\n  getTimeElapsed: (date) => {\r\n    if (!date) return '';\r\n    const now = new Date();\r\n    const past = new Date(date);\r\n    const diffMs = now - past;\r\n    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));\r\n    const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\r\n    const diffMinutes = Math.floor(diffMs / (1000 * 60));\r\n\r\n    if (diffDays > 0) {\r\n      return `Il y a ${diffDays} jour${diffDays > 1 ? 's' : ''}`;\r\n    } else if (diffHours > 0) {\r\n      return `Il y a ${diffHours} heure${diffHours > 1 ? 's' : ''}`;\r\n    } else if (diffMinutes > 0) {\r\n      return `Il y a ${diffMinutes} minute${diffMinutes > 1 ? 's' : ''}`;\r\n    } else {\r\n      return 'À l\\'instant';\r\n    }\r\n  },\r\n\r\n  validateReclamationDescription: (description) => {\r\n    const errors = [];\r\n    \r\n    if (!description || !description.trim()) {\r\n      errors.push('La description est obligatoire');\r\n    } else {\r\n      if (description.trim().length < 10) {\r\n        errors.push('La description doit contenir au moins 10 caractères');\r\n      }\r\n      if (description.trim().length > 2000) {\r\n        errors.push('La description ne peut pas dépasser 2000 caractères');\r\n      }\r\n    }\r\n    \r\n    return {\r\n      isValid: errors.length === 0,\r\n      errors\r\n    };\r\n  },\r\n\r\n  getReclamationNotificationMessage: (action, data = {}) => {\r\n    switch (action) {\r\n      case 'created':\r\n        return `Réclamation créée avec succès ! N° ${data.numero || 'N/A'}`;\r\n      case 'updated':\r\n        return 'Réclamation mise à jour avec succès';\r\n      case 'status_changed':\r\n        return `Statut de votre réclamation changé : ${data.statut || 'Mis à jour'}`;\r\n      case 'document_uploaded':\r\n        return 'Document ajouté avec succès';\r\n      case 'error':\r\n        return data.message || 'Une erreur est survenue';\r\n      default:\r\n        return 'Action effectuée avec succès';\r\n    }\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}