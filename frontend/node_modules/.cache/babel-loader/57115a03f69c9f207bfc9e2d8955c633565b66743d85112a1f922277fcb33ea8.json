{"ast":null,"code":"import axios from'axios';import{io}from'socket.io-client';// Configuration WebSocket\nconst WEBSOCKET_URL=process.env.REACT_APP_WEBSOCKET_URL||'http://localhost:3000';// Créer une connexion socket avec gestion des erreurs\nconst socket=io(WEBSOCKET_URL,{reconnection:true,reconnectionAttempts:5,reconnectionDelay:1000,timeout:10000});// Gestionnaire d'événements socket\nsocket.on('connect',()=>{console.log('WebSocket connecté');});socket.on('connect_error',error=>{console.error('Erreur de connexion WebSocket:',error);});socket.on('disconnect',reason=>{console.log('WebSocket déconnecté:',reason);});// Ajouter aux exports\nexport const socketService={socket,// Écouter les événements\nlisten:(event,callback)=>{socket.on(event,callback);},// Envoyer des messages\nemit:(event,data)=>{socket.emit(event,data);},// Se déconnecter proprement\ndisconnect:()=>{socket.disconnect();}};// Configuration de base de l'API\nconst API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:8000/api';// Créer une instance axios\nconst api=axios.create({baseURL:API_BASE_URL,withCredentials:true,headers:{'Content-Type':'application/json','Accept':'application/json','X-Requested-With':'XMLHttpRequest'}});// Intercepteur pour ajouter le token d'authentification\napi.interceptors.request.use(config=>{const token=localStorage.getItem('auth_token')||localStorage.getItem('setup_token');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;},error=>{return Promise.reject(error);});// Intercepteur pour gérer les réponses et erreurs\napi.interceptors.response.use(response=>{return response;},error=>{var _error$response,_error$response2,_error$response3;// Gestion des erreurs d'authentification\nif(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){// Token expiré ou invalide\nlocalStorage.removeItem('auth_token');localStorage.removeItem('setup_token');localStorage.removeItem('user_data');// Rediriger vers la page de connexion si on n'y est pas déjà\nif(!window.location.pathname.includes('/login')){window.location.href='/services';}}// Gestion des erreurs de validation (422)\nif(((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===422){console.error('Erreurs de validation:',error.response.data.errors);}// Gestion des erreurs serveur (500)\nif(((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.status)>=500){console.error('Erreur serveur:',error.response.data);}return Promise.reject(error);});// Services d'authentification\nexport const authService={// Première connexion pour les agents actifs\nfirstLoginActifs:data=>api.post('/auth/first-login/actifs',data),// Première connexion pour les retraités\nfirstLoginRetraites:data=>api.post('/auth/first-login/retraites',data),// Configuration du profil après première connexion\nsetupProfile:data=>api.post('/auth/setup-profile',data),// Connexion standard\nstandardLogin:data=>api.post('/auth/standard-login',data),// Déconnexion\nlogout:()=>api.post('/auth/logout'),// Vérifier le token\nverifyToken:()=>api.get('/auth/verify'),// Obtenir les informations de l'utilisateur connecté\ngetCurrentUser:()=>api.get('/auth/user'),verifyPhone:data=>{return api.post('/api/profile/verify-phone',data);},resendVerification:()=>{return api.post('/api/profile/resend-verification');}};// Services utilisateur\nexport const userService={// Obtenir le profil utilisateur\ngetProfile:()=>api.get('/user/profile'),// Mettre à jour le profil\nupdateProfile:data=>api.put('/user/profile',data),// Changer le mot de passe\nchangePassword:data=>api.put('/user/password',data)};// Services pour les agents actifs\nexport const agentService={// Obtenir le dashboard\ngetDashboard:()=>api.get('/agent/dashboard'),// Obtenir les attestations\ngetAttestations:()=>api.get('/agent/attestations'),// Demander une attestation\nrequestAttestation:data=>api.post('/agent/attestations',data),// Obtenir les prestations familiales\ngetPrestations:()=>api.get('/agent/prestations'),// Obtenir l'historique des cotisations\ngetCotisations:()=>api.get('/agent/cotisations')};// Services pour les retraités\nexport const retraiteService={// Obtenir le dashboard\ngetDashboard:()=>api.get('/retraite/dashboard'),// Obtenir les informations de pension\ngetPensionInfo:()=>api.get('/retraite/pension'),// Obtenir les certificats de vie\ngetCertificatsVie:()=>api.get('/retraite/certificats-vie'),// Soumettre un certificat de vie\nsubmitCertificatVie:data=>api.post('/retraite/certificats-vie',data),// Obtenir l'historique professionnel\ngetHistorique:()=>api.get('/retraite/historique')};// Utilitaires\nexport const utils={// Formater les erreurs de validation\nformatValidationErrors:errors=>{const formattedErrors={};for(const field in errors){formattedErrors[field]=errors[field][0];// Prendre le premier message d'erreur\n}return formattedErrors;},// Vérifier si l'utilisateur est connecté\nisAuthenticated:()=>{const token=localStorage.getItem('auth_token');return!!token;},// Obtenir les données utilisateur stockées\ngetUserData:()=>{const userData=localStorage.getItem('user_data');return userData?JSON.parse(userData):null;},// Stocker les données utilisateur\nsetUserData:userData=>{localStorage.setItem('user_data',JSON.stringify(userData));},// Nettoyer les données de session\nclearSession:()=>{localStorage.removeItem('auth_token');localStorage.removeItem('setup_token');localStorage.removeItem('user_data');},// Formater les numéros de téléphone\nformatPhoneNumber:phone=>{if(!phone)return'';// Supprimer tous les caractères non numériques\nconst cleaned=phone.replace(/\\D/g,'');// Ajouter l'indicatif +241 si nécessaire\nif(cleaned.length===8||cleaned.length===9){return`+241${cleaned}`;}return phone;},// Valider le format du matricule solde\nvalidateMatriculeSolde:matricule=>{return /^[0-9]{6}[A-Z]$/.test(matricule);},// Valider le format du numéro de pension\nvalidateNumeroPension:numero=>{return /^[0-9]+$/.test(numero);},// Formater les montants en FCFA\nformatCurrency:amount=>{if(!amount)return'0 FCFA';return new Intl.NumberFormat('fr-FR',{style:'currency',currency:'XAF',minimumFractionDigits:0,maximumFractionDigits:0}).format(amount).replace('XAF','FCFA');},// Formater les dates\nformatDate:date=>{if(!date)return'';return new Date(date).toLocaleDateString('fr-FR',{year:'numeric',month:'long',day:'numeric'});},// Calculer l'âge\ncalculateAge:birthDate=>{if(!birthDate)return 0;const today=new Date();const birth=new Date(birthDate);let age=today.getFullYear()-birth.getFullYear();const monthDiff=today.getMonth()-birth.getMonth();if(monthDiff<0||monthDiff===0&&today.getDate()<birth.getDate()){age--;}return age;}};// Export par défaut\nexport default api;","map":{"version":3,"names":["axios","io","WEBSOCKET_URL","process","env","REACT_APP_WEBSOCKET_URL","socket","reconnection","reconnectionAttempts","reconnectionDelay","timeout","on","console","log","error","reason","socketService","listen","event","callback","emit","data","disconnect","API_BASE_URL","REACT_APP_API_URL","api","create","baseURL","withCredentials","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","Promise","reject","response","_error$response","_error$response2","_error$response3","status","removeItem","window","location","pathname","includes","href","errors","authService","firstLoginActifs","post","firstLoginRetraites","setupProfile","standardLogin","logout","verifyToken","get","getCurrentUser","verifyPhone","resendVerification","userService","getProfile","updateProfile","put","changePassword","agentService","getDashboard","getAttestations","requestAttestation","getPrestations","getCotisations","retraiteService","getPensionInfo","getCertificatsVie","submitCertificatVie","getHistorique","utils","formatValidationErrors","formattedErrors","field","isAuthenticated","getUserData","userData","JSON","parse","setUserData","setItem","stringify","clearSession","formatPhoneNumber","phone","cleaned","replace","length","validateMatriculeSolde","matricule","test","validateNumeroPension","numero","formatCurrency","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatDate","date","Date","toLocaleDateString","year","month","day","calculateAge","birthDate","today","birth","age","getFullYear","monthDiff","getMonth","getDate"],"sources":["C:/Users/invite/Documents/servicescppf/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nimport { io } from 'socket.io-client';\r\n\r\n// Configuration WebSocket\r\nconst WEBSOCKET_URL = process.env.REACT_APP_WEBSOCKET_URL || 'http://localhost:3000';\r\n\r\n// Créer une connexion socket avec gestion des erreurs\r\nconst socket = io(WEBSOCKET_URL, {\r\n  reconnection: true,\r\n  reconnectionAttempts: 5,\r\n  reconnectionDelay: 1000,\r\n  timeout: 10000,\r\n});\r\n\r\n// Gestionnaire d'événements socket\r\nsocket.on('connect', () => {\r\n  console.log('WebSocket connecté');\r\n});\r\n\r\nsocket.on('connect_error', (error) => {\r\n  console.error('Erreur de connexion WebSocket:', error);\r\n});\r\n\r\nsocket.on('disconnect', (reason) => {\r\n  console.log('WebSocket déconnecté:', reason);\r\n});\r\n\r\n// Ajouter aux exports\r\nexport const socketService = {\r\n  socket,\r\n  \r\n  // Écouter les événements\r\n  listen: (event, callback) => {\r\n    socket.on(event, callback);\r\n  },\r\n  \r\n  // Envoyer des messages\r\n  emit: (event, data) => {\r\n    socket.emit(event, data);\r\n  },\r\n  \r\n  // Se déconnecter proprement\r\n  disconnect: () => {\r\n    socket.disconnect();\r\n  }\r\n};\r\n\r\n// Configuration de base de l'API\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\r\n\r\n// Créer une instance axios\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  withCredentials: true,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json',\r\n    'X-Requested-With': 'XMLHttpRequest',\r\n  },\r\n});\r\n\r\n// Intercepteur pour ajouter le token d'authentification\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('auth_token') || localStorage.getItem('setup_token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Intercepteur pour gérer les réponses et erreurs\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    // Gestion des erreurs d'authentification\r\n    if (error.response?.status === 401) {\r\n      // Token expiré ou invalide\r\n      localStorage.removeItem('auth_token');\r\n      localStorage.removeItem('setup_token');\r\n      localStorage.removeItem('user_data');\r\n      \r\n      // Rediriger vers la page de connexion si on n'y est pas déjà\r\n      if (!window.location.pathname.includes('/login')) {\r\n        window.location.href = '/services';\r\n      }\r\n    }\r\n\r\n    // Gestion des erreurs de validation (422)\r\n    if (error.response?.status === 422) {\r\n      console.error('Erreurs de validation:', error.response.data.errors);\r\n    }\r\n\r\n    // Gestion des erreurs serveur (500)\r\n    if (error.response?.status >= 500) {\r\n      console.error('Erreur serveur:', error.response.data);\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Services d'authentification\r\nexport const authService = {\r\n  // Première connexion pour les agents actifs\r\n  firstLoginActifs: (data) => api.post('/auth/first-login/actifs', data),\r\n  \r\n  // Première connexion pour les retraités\r\n  firstLoginRetraites: (data) => api.post('/auth/first-login/retraites', data),\r\n  \r\n  // Configuration du profil après première connexion\r\n  setupProfile: (data) => api.post('/auth/setup-profile', data),\r\n  \r\n  // Connexion standard\r\n  standardLogin: (data) => api.post('/auth/standard-login', data),\r\n  \r\n  // Déconnexion\r\n  logout: () => api.post('/auth/logout'),\r\n  \r\n  // Vérifier le token\r\n  verifyToken: () => api.get('/auth/verify'),\r\n  \r\n  // Obtenir les informations de l'utilisateur connecté\r\n  getCurrentUser: () => api.get('/auth/user'),\r\n\r\n  verifyPhone: (data) => {\r\n    return api.post('/api/profile/verify-phone', data);\r\n  },\r\n\r\n  resendVerification: () => {\r\n    return api.post('/api/profile/resend-verification');\r\n  }\r\n\r\n};\r\n\r\n// Services utilisateur\r\nexport const userService = {\r\n  // Obtenir le profil utilisateur\r\n  getProfile: () => api.get('/user/profile'),\r\n  \r\n  // Mettre à jour le profil\r\n  updateProfile: (data) => api.put('/user/profile', data),\r\n  \r\n  // Changer le mot de passe\r\n  changePassword: (data) => api.put('/user/password', data),\r\n};\r\n\r\n// Services pour les agents actifs\r\nexport const agentService = {\r\n  // Obtenir le dashboard\r\n  getDashboard: () => api.get('/agent/dashboard'),\r\n  \r\n  // Obtenir les attestations\r\n  getAttestations: () => api.get('/agent/attestations'),\r\n  \r\n  // Demander une attestation\r\n  requestAttestation: (data) => api.post('/agent/attestations', data),\r\n  \r\n  // Obtenir les prestations familiales\r\n  getPrestations: () => api.get('/agent/prestations'),\r\n  \r\n  // Obtenir l'historique des cotisations\r\n  getCotisations: () => api.get('/agent/cotisations'),\r\n};\r\n\r\n// Services pour les retraités\r\nexport const retraiteService = {\r\n  // Obtenir le dashboard\r\n  getDashboard: () => api.get('/retraite/dashboard'),\r\n  \r\n  // Obtenir les informations de pension\r\n  getPensionInfo: () => api.get('/retraite/pension'),\r\n  \r\n  // Obtenir les certificats de vie\r\n  getCertificatsVie: () => api.get('/retraite/certificats-vie'),\r\n  \r\n  // Soumettre un certificat de vie\r\n  submitCertificatVie: (data) => api.post('/retraite/certificats-vie', data),\r\n  \r\n  // Obtenir l'historique professionnel\r\n  getHistorique: () => api.get('/retraite/historique'),\r\n};\r\n\r\n// Utilitaires\r\nexport const utils = {\r\n  // Formater les erreurs de validation\r\n  formatValidationErrors: (errors) => {\r\n    const formattedErrors = {};\r\n    for (const field in errors) {\r\n      formattedErrors[field] = errors[field][0]; // Prendre le premier message d'erreur\r\n    }\r\n    return formattedErrors;\r\n  },\r\n  \r\n  // Vérifier si l'utilisateur est connecté\r\n  isAuthenticated: () => {\r\n    const token = localStorage.getItem('auth_token');\r\n    return !!token;\r\n  },\r\n  \r\n  // Obtenir les données utilisateur stockées\r\n  getUserData: () => {\r\n    const userData = localStorage.getItem('user_data');\r\n    return userData ? JSON.parse(userData) : null;\r\n  },\r\n  \r\n  // Stocker les données utilisateur\r\n  setUserData: (userData) => {\r\n    localStorage.setItem('user_data', JSON.stringify(userData));\r\n  },\r\n  \r\n  // Nettoyer les données de session\r\n  clearSession: () => {\r\n    localStorage.removeItem('auth_token');\r\n    localStorage.removeItem('setup_token');\r\n    localStorage.removeItem('user_data');\r\n  },\r\n  \r\n  // Formater les numéros de téléphone\r\n  formatPhoneNumber: (phone) => {\r\n    if (!phone) return '';\r\n    // Supprimer tous les caractères non numériques\r\n    const cleaned = phone.replace(/\\D/g, '');\r\n    // Ajouter l'indicatif +241 si nécessaire\r\n    if (cleaned.length === 8 || cleaned.length === 9) {\r\n      return `+241${cleaned}`;\r\n    }\r\n    return phone;\r\n  },\r\n  \r\n  // Valider le format du matricule solde\r\n  validateMatriculeSolde: (matricule) => {\r\n    return /^[0-9]{6}[A-Z]$/.test(matricule);\r\n  },\r\n  \r\n  // Valider le format du numéro de pension\r\n  validateNumeroPension: (numero) => {\r\n    return /^[0-9]+$/.test(numero);\r\n  },\r\n  \r\n  // Formater les montants en FCFA\r\n  formatCurrency: (amount) => {\r\n    if (!amount) return '0 FCFA';\r\n    return new Intl.NumberFormat('fr-FR', {\r\n      style: 'currency',\r\n      currency: 'XAF',\r\n      minimumFractionDigits: 0,\r\n      maximumFractionDigits: 0,\r\n    }).format(amount).replace('XAF', 'FCFA');\r\n  },\r\n  \r\n  // Formater les dates\r\n  formatDate: (date) => {\r\n    if (!date) return '';\r\n    return new Date(date).toLocaleDateString('fr-FR', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n    });\r\n  },\r\n  \r\n  // Calculer l'âge\r\n  calculateAge: (birthDate) => {\r\n    if (!birthDate) return 0;\r\n    const today = new Date();\r\n    const birth = new Date(birthDate);\r\n    let age = today.getFullYear() - birth.getFullYear();\r\n    const monthDiff = today.getMonth() - birth.getMonth();\r\n    \r\n    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birth.getDate())) {\r\n      age--;\r\n    }\r\n    \r\n    return age;\r\n  }\r\n};\r\n\r\n// Export par défaut\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}