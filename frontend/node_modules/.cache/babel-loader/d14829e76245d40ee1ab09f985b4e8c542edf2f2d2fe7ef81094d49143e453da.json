{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import api from'../services/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FirstLoginActifs=_ref=>{let{onModeSwitch}=_ref;const navigate=useNavigate();const[formData,setFormData]=useState({matricule_solde:'',password:''});const[errors,setErrors]=useState({});const[loading,setLoading]=useState(false);const[message,setMessage]=useState({type:'',text:''});const handleInputChange=e=>{const{name,value}=e.target;// Validation en temps réel\nlet formattedValue=value;if(name==='matricule_solde'){// Supprimer tous les caractères non alphanumériques\nformattedValue=value.replace(/[^0-9A-Z]/g,'');// Limiter à 13 caractères maximum\nformattedValue=formattedValue.slice(0,13);}if(name==='password'){// Supprimer tous les caractères non numériques\nformattedValue=value.replace(/[^0-9]/g,'');// Limiter à 12 chiffres maximum (pour le format 13 caractères)\nformattedValue=formattedValue.slice(0,12);}setFormData(prev=>({...prev,[name]:formattedValue}));// Effacer l'erreur pour ce champ\nif(errors[name]){setErrors(prev=>({...prev,[name]:''}));}};const validateForm=()=>{const newErrors={};// Validation matricule solde\nif(!formData.matricule_solde){newErrors.matricule_solde='Le matricule solde est requis';}else{const length=formData.matricule_solde.length;if(length===7){// Format 7 caractères : 6 chiffres + 1 lettre\nif(!/^[0-9]{6}[A-Z]$/.test(formData.matricule_solde)){newErrors.matricule_solde='Format 7 caractères : 6 chiffres suivis d\\'une lettre majuscule';}}else if(length===13){// Format 13 caractères : 12 chiffres + 1 lettre\nif(!/^[0-9]{12}[A-Z]$/.test(formData.matricule_solde)){newErrors.matricule_solde='Format 13 caractères : 12 chiffres suivis d\\'une lettre majuscule';}}else if(length>0&&length<7){newErrors.matricule_solde='Matricule incomplet. Format attendu : 7 ou 13 caractères';}else if(length>7&&length<13){newErrors.matricule_solde='Matricule incomplet. Format attendu : 7 ou 13 caractères';}else if(length>13){newErrors.matricule_solde='Matricule trop long. Maximum 13 caractères';}else{newErrors.matricule_solde='Format invalide. Attendu : 7 caractères (6 chiffres + 1 lettre) ou 13 caractères (12 chiffres + 1 lettre)';}}// Validation mot de passe temporaire\nif(!formData.password){newErrors.password='Le mot de passe temporaire est requis';}else{const matriculeLength=formData.matricule_solde.length;if(matriculeLength===7){// Pour le format 7 caractères, le mot de passe doit faire 6 chiffres\nif(formData.password.length!==6){newErrors.password='Le mot de passe doit contenir exactement 6 chiffres';}else if(!/^[0-9]{6}$/.test(formData.password)){newErrors.password='Le mot de passe doit contenir uniquement des chiffres';}}else if(matriculeLength===13){// Pour le format 13 caractères, le mot de passe doit faire 12 chiffres\nif(formData.password.length!==12){newErrors.password='Le mot de passe doit contenir exactement 12 chiffres';}else if(!/^[0-9]{12}$/.test(formData.password)){newErrors.password='Le mot de passe doit contenir uniquement des chiffres';}}}// Vérifier que le mot de passe correspond aux chiffres du matricule\nif(formData.matricule_solde.length===7&&formData.password.length===6){const matriculeNumbers=formData.matricule_solde.slice(0,6);if(matriculeNumbers!==formData.password){newErrors.password='Le mot de passe doit correspondre aux 6 premiers chiffres du matricule';}}else if(formData.matricule_solde.length===13&&formData.password.length===12){const matriculeNumbers=formData.matricule_solde.slice(0,12);if(matriculeNumbers!==formData.password){newErrors.password='Le mot de passe doit correspondre aux 12 premiers chiffres du matricule';}}setErrors(newErrors);return Object.keys(newErrors).length===0;};const handleSubmit=async e=>{e.preventDefault();if(!validateForm()){return;}setLoading(true);setMessage({type:'',text:''});try{const response=await api.post('/auth/first-login/actifs',formData);if(response.data.success){// Stocker le token temporaire pour la configuration\nlocalStorage.setItem('setup_token',response.data.token);localStorage.setItem('user_data',JSON.stringify(response.data.user));setMessage({type:'success',text:'Connexion réussie ! Redirection vers la configuration de votre profil...'});// Rediriger vers la page de configuration du profil\nsetTimeout(()=>{navigate('/setup-profile');},2000);}}catch(error){var _error$response,_error$response$data,_error$response2,_error$response2$data;console.error('Erreur de connexion:',error);if((_error$response=error.response)!==null&&_error$response!==void 0&&(_error$response$data=_error$response.data)!==null&&_error$response$data!==void 0&&_error$response$data.errors){setErrors(error.response.data.errors);}else if((_error$response2=error.response)!==null&&_error$response2!==void 0&&(_error$response2$data=_error$response2.data)!==null&&_error$response2$data!==void 0&&_error$response2$data.message){if(error.response.data.redirect==='standard_login'){setMessage({type:'info',text:error.response.data.message+' Utilisez la connexion standard.'});setTimeout(()=>onModeSwitch('standard'),3000);}else{setMessage({type:'error',text:error.response.data.message});}}else{setMessage({type:'error',text:'Erreur de connexion. Vérifiez votre connexion internet.'});}}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"form\",{className:\"login-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"h2\",{className:\"login-form__title\",children:\"Premi\\xE8re connexion - Agents Actifs\"}),message.text&&/*#__PURE__*/_jsx(\"div\",{className:`login-form__message login-form__message--${message.type}`,children:message.text}),/*#__PURE__*/_jsxs(\"div\",{className:\"login-form__group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"matricule_solde\",className:\"login-form__label\",children:\"Matricule solde *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"matricule_solde\",name:\"matricule_solde\",value:formData.matricule_solde,onChange:handleInputChange,placeholder:\"123456A ou 123456789012B\",className:`login-form__input ${errors.matricule_solde?'login-form__input--error':''}`,maxLength:13,required:true,disabled:loading}),errors.matricule_solde&&/*#__PURE__*/_jsx(\"div\",{className:\"login-form__error\",children:errors.matricule_solde}),/*#__PURE__*/_jsx(\"div\",{className:\"login-form__help\",children:/*#__PURE__*/_jsx(\"small\",{children:\"Format accept\\xE9 : 7 caract\\xE8res (6 chiffres + 1 lettre) ou 13 caract\\xE8res (12 chiffres + 1 lettre)\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"login-form__group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",className:\"login-form__label\",children:\"Mot de passe temporaire *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",name:\"password\",value:formData.password,onChange:handleInputChange,placeholder:formData.matricule_solde.length===13?\"123456789012\":\"123456\",className:`login-form__input ${errors.password?'login-form__input--error':''}`,maxLength:12,required:true,disabled:loading}),errors.password&&/*#__PURE__*/_jsx(\"div\",{className:\"login-form__error\",children:errors.password}),/*#__PURE__*/_jsx(\"div\",{className:\"login-form__help\",children:/*#__PURE__*/_jsx(\"small\",{children:formData.matricule_solde.length===13?\"Les 12 premiers chiffres de votre matricule solde\":\"Les 6 premiers chiffres de votre matricule solde\"})})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"login-form__button\",disabled:loading,children:loading?/*#__PURE__*/_jsxs(\"div\",{className:\"login-form__loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"login-form__spinner\"}),\"Connexion en cours...\"]}):'Se connecter'}),/*#__PURE__*/_jsxs(\"div\",{className:\"login-form__switch\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"login-form__switch-text\",children:\"D\\xE9j\\xE0 configur\\xE9 votre compte ?\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"login-form__switch-button\",onClick:()=>onModeSwitch('standard'),disabled:loading,children:\"Utiliser la connexion standard\"})]})]});};export default FirstLoginActifs;","map":{"version":3,"names":["React","useState","useNavigate","api","jsx","_jsx","jsxs","_jsxs","FirstLoginActifs","_ref","onModeSwitch","navigate","formData","setFormData","matricule_solde","password","errors","setErrors","loading","setLoading","message","setMessage","type","text","handleInputChange","e","name","value","target","formattedValue","replace","slice","prev","validateForm","newErrors","length","test","matriculeLength","matriculeNumbers","Object","keys","handleSubmit","preventDefault","response","post","data","success","localStorage","setItem","token","JSON","stringify","user","setTimeout","error","_error$response","_error$response$data","_error$response2","_error$response2$data","console","redirect","className","onSubmit","children","htmlFor","id","onChange","placeholder","maxLength","required","disabled","onClick"],"sources":["C:/Users/invite/Documents/servicescppf/frontend/src/components/FirstLoginActifs.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport api from '../services/api';\r\n\r\nconst FirstLoginActifs = ({ onModeSwitch }) => {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    matricule_solde: '',\r\n    password: ''\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [message, setMessage] = useState({ type: '', text: '' });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    \r\n    // Validation en temps réel\r\n    let formattedValue = value;\r\n    \r\n    if (name === 'matricule_solde') {\r\n      // Supprimer tous les caractères non alphanumériques\r\n      formattedValue = value.replace(/[^0-9A-Z]/g, '');\r\n      // Limiter à 13 caractères maximum\r\n      formattedValue = formattedValue.slice(0, 13);\r\n    }\r\n    \r\n    if (name === 'password') {\r\n      // Supprimer tous les caractères non numériques\r\n      formattedValue = value.replace(/[^0-9]/g, '');\r\n      // Limiter à 12 chiffres maximum (pour le format 13 caractères)\r\n      formattedValue = formattedValue.slice(0, 12);\r\n    }\r\n\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: formattedValue\r\n    }));\r\n\r\n    // Effacer l'erreur pour ce champ\r\n    if (errors[name]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [name]: ''\r\n      }));\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n\r\n    // Validation matricule solde\r\n    if (!formData.matricule_solde) {\r\n      newErrors.matricule_solde = 'Le matricule solde est requis';\r\n    } else {\r\n      const length = formData.matricule_solde.length;\r\n      \r\n      if (length === 7) {\r\n        // Format 7 caractères : 6 chiffres + 1 lettre\r\n        if (!/^[0-9]{6}[A-Z]$/.test(formData.matricule_solde)) {\r\n          newErrors.matricule_solde = 'Format 7 caractères : 6 chiffres suivis d\\'une lettre majuscule';\r\n        }\r\n      } else if (length === 13) {\r\n        // Format 13 caractères : 12 chiffres + 1 lettre\r\n        if (!/^[0-9]{12}[A-Z]$/.test(formData.matricule_solde)) {\r\n          newErrors.matricule_solde = 'Format 13 caractères : 12 chiffres suivis d\\'une lettre majuscule';\r\n        }\r\n      } else if (length > 0 && length < 7) {\r\n        newErrors.matricule_solde = 'Matricule incomplet. Format attendu : 7 ou 13 caractères';\r\n      } else if (length > 7 && length < 13) {\r\n        newErrors.matricule_solde = 'Matricule incomplet. Format attendu : 7 ou 13 caractères';\r\n      } else if (length > 13) {\r\n        newErrors.matricule_solde = 'Matricule trop long. Maximum 13 caractères';\r\n      } else {\r\n        newErrors.matricule_solde = 'Format invalide. Attendu : 7 caractères (6 chiffres + 1 lettre) ou 13 caractères (12 chiffres + 1 lettre)';\r\n      }\r\n    }\r\n\r\n    // Validation mot de passe temporaire\r\n    if (!formData.password) {\r\n      newErrors.password = 'Le mot de passe temporaire est requis';\r\n    } else {\r\n      const matriculeLength = formData.matricule_solde.length;\r\n      \r\n      if (matriculeLength === 7) {\r\n        // Pour le format 7 caractères, le mot de passe doit faire 6 chiffres\r\n        if (formData.password.length !== 6) {\r\n          newErrors.password = 'Le mot de passe doit contenir exactement 6 chiffres';\r\n        } else if (!/^[0-9]{6}$/.test(formData.password)) {\r\n          newErrors.password = 'Le mot de passe doit contenir uniquement des chiffres';\r\n        }\r\n      } else if (matriculeLength === 13) {\r\n        // Pour le format 13 caractères, le mot de passe doit faire 12 chiffres\r\n        if (formData.password.length !== 12) {\r\n          newErrors.password = 'Le mot de passe doit contenir exactement 12 chiffres';\r\n        } else if (!/^[0-9]{12}$/.test(formData.password)) {\r\n          newErrors.password = 'Le mot de passe doit contenir uniquement des chiffres';\r\n        }\r\n      }\r\n    }\r\n\r\n    // Vérifier que le mot de passe correspond aux chiffres du matricule\r\n    if (formData.matricule_solde.length === 7 && formData.password.length === 6) {\r\n      const matriculeNumbers = formData.matricule_solde.slice(0, 6);\r\n      if (matriculeNumbers !== formData.password) {\r\n        newErrors.password = 'Le mot de passe doit correspondre aux 6 premiers chiffres du matricule';\r\n      }\r\n    } else if (formData.matricule_solde.length === 13 && formData.password.length === 12) {\r\n      const matriculeNumbers = formData.matricule_solde.slice(0, 12);\r\n      if (matriculeNumbers !== formData.password) {\r\n        newErrors.password = 'Le mot de passe doit correspondre aux 12 premiers chiffres du matricule';\r\n      }\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setMessage({ type: '', text: '' });\r\n\r\n    try {\r\n      const response = await api.post('/auth/first-login/actifs', formData);\r\n\r\n      if (response.data.success) {\r\n        // Stocker le token temporaire pour la configuration\r\n        localStorage.setItem('setup_token', response.data.token);\r\n        localStorage.setItem('user_data', JSON.stringify(response.data.user));\r\n        \r\n        setMessage({ \r\n          type: 'success', \r\n          text: 'Connexion réussie ! Redirection vers la configuration de votre profil...' \r\n        });\r\n\r\n        // Rediriger vers la page de configuration du profil\r\n        setTimeout(() => {\r\n          navigate('/setup-profile');\r\n        }, 2000);\r\n      }\r\n    } catch (error) {\r\n      console.error('Erreur de connexion:', error);\r\n      \r\n      if (error.response?.data?.errors) {\r\n        setErrors(error.response.data.errors);\r\n      } else if (error.response?.data?.message) {\r\n        if (error.response.data.redirect === 'standard_login') {\r\n          setMessage({ \r\n            type: 'info', \r\n            text: error.response.data.message + ' Utilisez la connexion standard.' \r\n          });\r\n          setTimeout(() => onModeSwitch('standard'), 3000);\r\n        } else {\r\n          setMessage({ type: 'error', text: error.response.data.message });\r\n        }\r\n      } else {\r\n        setMessage({ \r\n          type: 'error', \r\n          text: 'Erreur de connexion. Vérifiez votre connexion internet.' \r\n        });\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"login-form\" onSubmit={handleSubmit}>\r\n      <h2 className=\"login-form__title\">Première connexion - Agents Actifs</h2>\r\n      \r\n\r\n      {message.text && (\r\n        <div className={`login-form__message login-form__message--${message.type}`}>\r\n          {message.text}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"login-form__group\">\r\n        <label htmlFor=\"matricule_solde\" className=\"login-form__label\">\r\n          Matricule solde *\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"matricule_solde\"\r\n          name=\"matricule_solde\"\r\n          value={formData.matricule_solde}\r\n          onChange={handleInputChange}\r\n          placeholder=\"123456A ou 123456789012B\"\r\n          className={`login-form__input ${errors.matricule_solde ? 'login-form__input--error' : ''}`}\r\n          maxLength={13}\r\n          required\r\n          disabled={loading}\r\n        />\r\n        {errors.matricule_solde && (\r\n          <div className=\"login-form__error\">{errors.matricule_solde}</div>\r\n        )}\r\n        <div className=\"login-form__help\">\r\n          <small>Format accepté : 7 caractères (6 chiffres + 1 lettre) ou 13 caractères (12 chiffres + 1 lettre)</small>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"login-form__group\">\r\n        <label htmlFor=\"password\" className=\"login-form__label\">\r\n          Mot de passe temporaire *\r\n        </label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          value={formData.password}\r\n          onChange={handleInputChange}\r\n          placeholder={formData.matricule_solde.length === 13 ? \"123456789012\" : \"123456\"}\r\n          className={`login-form__input ${errors.password ? 'login-form__input--error' : ''}`}\r\n          maxLength={12}\r\n          required\r\n          disabled={loading}\r\n        />\r\n        {errors.password && (\r\n          <div className=\"login-form__error\">{errors.password}</div>\r\n        )}\r\n        <div className=\"login-form__help\">\r\n          <small>\r\n            {formData.matricule_solde.length === 13 \r\n              ? \"Les 12 premiers chiffres de votre matricule solde\"\r\n              : \"Les 6 premiers chiffres de votre matricule solde\"\r\n            }\r\n          </small>\r\n        </div>\r\n      </div>\r\n\r\n      <button \r\n        type=\"submit\" \r\n        className=\"login-form__button\"\r\n        disabled={loading}\r\n      >\r\n        {loading ? (\r\n          <div className=\"login-form__loading\">\r\n            <div className=\"login-form__spinner\"></div>\r\n            Connexion en cours...\r\n          </div>\r\n        ) : (\r\n          'Se connecter'\r\n        )}\r\n      </button>\r\n\r\n      <div className=\"login-form__switch\">\r\n        <p className=\"login-form__switch-text\">Déjà configuré votre compte ?</p>\r\n        <button \r\n          type=\"button\" \r\n          className=\"login-form__switch-button\"\r\n          onClick={() => onModeSwitch('standard')}\r\n          disabled={loading}\r\n        >\r\n          Utiliser la connexion standard\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FirstLoginActifs;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}