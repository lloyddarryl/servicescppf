{"ast":null,"code":"import axios from 'axios';\n\n// Configuration de base de l'API\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\n\n// Créer une instance axios\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  timeout: 30000 // 30 secondes de timeout\n});\n\n// Intercepteur pour ajouter le token d'authentification\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('auth_token') || localStorage.getItem('setup_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Intercepteur pour gérer les réponses et erreurs\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response, _error$response2, _error$config, _error$config2, _error$response3;\n  console.error('API Error:', {\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data,\n    url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n    method: (_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : _error$config2.method\n  });\n\n  // Gestion des erreurs d'authentification\n  if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n    localStorage.removeItem('auth_token');\n    localStorage.removeItem('setup_token');\n    localStorage.removeItem('user_data');\n    if (!window.location.pathname.includes('/login')) {\n      window.location.href = '/services';\n    }\n  }\n  return Promise.reject(error);\n});\n\n// Services d'authentification\nexport const authService = {\n  firstLoginActifs: data => api.post('/auth/first-login/actifs', data),\n  firstLoginRetraites: data => api.post('/auth/first-login/retraites', data),\n  setupProfile: data => api.post('/auth/setup-profile', data),\n  standardLogin: data => api.post('/auth/standard-login', data),\n  logout: () => api.post('/auth/logout'),\n  verifyToken: () => api.get('/auth/verify'),\n  getCurrentUser: () => api.get('/auth/user'),\n  verifyPhone: data => api.post('/auth/verify-phone-setup', data),\n  resendVerification: () => api.post('/auth/resend-verification-setup')\n};\n\n// Services utilisateur\nexport const userService = {\n  getProfile: () => api.get('/profile'),\n  updateProfile: data => api.put('/profile', data),\n  changePassword: data => api.put('/profile/password', data),\n  verifyPhone: data => api.post('/profile/verify-phone', data),\n  resendVerification: () => api.post('/profile/resend-verification')\n};\n\n// ✅ SERVICES POUR LE SIMULATEUR DE PENSION\nexport const pensionSimulatorService = {\n  // Obtenir le profil pour le simulateur\n  getProfile: () => api.get('/actifs/simulateur-pension/profil'),\n  // Lancer une simulation\n  simulate: data => api.post('/actifs/simulateur-pension/simuler', data),\n  // Obtenir l'historique des simulations\n  getHistory: () => api.get('/actifs/simulateur-pension/historique'),\n  // Obtenir les paramètres de calcul\n  getParameters: () => api.get('/actifs/simulateur-pension/parametres')\n};\n\n// Services pour les agents actifs\nexport const agentService = {\n  getDashboard: () => api.get('/actifs/dashboard'),\n  getAttestations: () => api.get('/actifs/attestations'),\n  requestAttestation: data => api.post('/actifs/attestations', data),\n  getPrestations: () => api.get('/actifs/prestations'),\n  getCotisations: () => api.get('/actifs/cotisations')\n};\n\n// Services pour les retraités\nexport const retraiteService = {\n  getDashboard: () => api.get('/retraites/dashboard'),\n  getPensionInfo: () => api.get('/retraites/pension'),\n  getCertificatsVie: () => api.get('/retraites/certificats-vie'),\n  submitCertificatVie: data => api.post('/retraites/certificats-vie', data),\n  getHistorique: () => api.get('/retraites/historique')\n};\n\n// Utilitaires\nexport const utils = {\n  formatValidationErrors: errors => {\n    const formattedErrors = {};\n    for (const field in errors) {\n      formattedErrors[field] = errors[field][0];\n    }\n    return formattedErrors;\n  },\n  isAuthenticated: () => {\n    const token = localStorage.getItem('auth_token');\n    return !!token;\n  },\n  getUserData: () => {\n    const userData = localStorage.getItem('user_data');\n    return userData ? JSON.parse(userData) : null;\n  },\n  setUserData: userData => {\n    localStorage.setItem('user_data', JSON.stringify(userData));\n  },\n  clearSession: () => {\n    localStorage.removeItem('auth_token');\n    localStorage.removeItem('setup_token');\n    localStorage.removeItem('user_data');\n  },\n  formatPhoneNumber: phone => {\n    if (!phone) return '';\n    const cleaned = phone.replace(/\\D/g, '');\n    if (cleaned.length === 8 || cleaned.length === 9) {\n      return `+241${cleaned}`;\n    }\n    return phone;\n  },\n  validateMatriculeSolde: matricule => {\n    return /^[0-9]{6}[A-Z]$/.test(matricule);\n  },\n  validateNumeroPension: numero => {\n    return /^[0-9]+$/.test(numero);\n  },\n  formatCurrency: amount => {\n    if (!amount) return '0 FCFA';\n    return new Intl.NumberFormat('fr-FR', {\n      style: 'currency',\n      currency: 'XAF',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0\n    }).format(amount).replace('XAF', 'FCFA');\n  },\n  formatDate: date => {\n    if (!date) return '';\n    return new Date(date).toLocaleDateString('fr-FR', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    });\n  },\n  calculateAge: birthDate => {\n    if (!birthDate) return 0;\n    const today = new Date();\n    const birth = new Date(birthDate);\n    let age = today.getFullYear() - birth.getFullYear();\n    const monthDiff = today.getMonth() - birth.getMonth();\n    if (monthDiff < 0 || monthDiff === 0 && today.getDate() < birth.getDate()) {\n      age--;\n    }\n    return age;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","timeout","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","_error$response2","_error$config","_error$config2","_error$response3","console","status","data","url","method","removeItem","window","location","pathname","includes","href","authService","firstLoginActifs","post","firstLoginRetraites","setupProfile","standardLogin","logout","verifyToken","get","getCurrentUser","verifyPhone","resendVerification","userService","getProfile","updateProfile","put","changePassword","pensionSimulatorService","simulate","getHistory","getParameters","agentService","getDashboard","getAttestations","requestAttestation","getPrestations","getCotisations","retraiteService","getPensionInfo","getCertificatsVie","submitCertificatVie","getHistorique","utils","formatValidationErrors","errors","formattedErrors","field","isAuthenticated","getUserData","userData","JSON","parse","setUserData","setItem","stringify","clearSession","formatPhoneNumber","phone","cleaned","replace","length","validateMatriculeSolde","matricule","test","validateNumeroPension","numero","formatCurrency","amount","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatDate","date","Date","toLocaleDateString","year","month","day","calculateAge","birthDate","today","birth","age","getFullYear","monthDiff","getMonth","getDate"],"sources":["C:/Users/invite/Documents/servicescppf/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Configuration de base de l'API\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\r\n\r\n// Créer une instance axios\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json',\r\n  },\r\n  timeout: 30000, // 30 secondes de timeout\r\n});\r\n\r\n// Intercepteur pour ajouter le token d'authentification\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('auth_token') || localStorage.getItem('setup_token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Intercepteur pour gérer les réponses et erreurs\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('API Error:', {\r\n      status: error.response?.status,\r\n      data: error.response?.data,\r\n      url: error.config?.url,\r\n      method: error.config?.method\r\n    });\r\n    \r\n    // Gestion des erreurs d'authentification\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('auth_token');\r\n      localStorage.removeItem('setup_token');\r\n      localStorage.removeItem('user_data');\r\n      \r\n      if (!window.location.pathname.includes('/login')) {\r\n        window.location.href = '/services';\r\n      }\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Services d'authentification\r\nexport const authService = {\r\n  firstLoginActifs: (data) => api.post('/auth/first-login/actifs', data),\r\n  firstLoginRetraites: (data) => api.post('/auth/first-login/retraites', data),\r\n  setupProfile: (data) => api.post('/auth/setup-profile', data),\r\n  standardLogin: (data) => api.post('/auth/standard-login', data),\r\n  logout: () => api.post('/auth/logout'),\r\n  verifyToken: () => api.get('/auth/verify'),\r\n  getCurrentUser: () => api.get('/auth/user'),\r\n  verifyPhone: (data) => api.post('/auth/verify-phone-setup', data),\r\n  resendVerification: () => api.post('/auth/resend-verification-setup')\r\n};\r\n\r\n// Services utilisateur\r\nexport const userService = {\r\n  getProfile: () => api.get('/profile'),\r\n  updateProfile: (data) => api.put('/profile', data),\r\n  changePassword: (data) => api.put('/profile/password', data),\r\n  verifyPhone: (data) => api.post('/profile/verify-phone', data),\r\n  resendVerification: () => api.post('/profile/resend-verification')\r\n};\r\n\r\n// ✅ SERVICES POUR LE SIMULATEUR DE PENSION\r\nexport const pensionSimulatorService = {\r\n  // Obtenir le profil pour le simulateur\r\n  getProfile: () => api.get('/actifs/simulateur-pension/profil'),\r\n  \r\n  // Lancer une simulation\r\n  simulate: (data) => api.post('/actifs/simulateur-pension/simuler', data),\r\n  \r\n  // Obtenir l'historique des simulations\r\n  getHistory: () => api.get('/actifs/simulateur-pension/historique'),\r\n  \r\n  // Obtenir les paramètres de calcul\r\n  getParameters: () => api.get('/actifs/simulateur-pension/parametres')\r\n};\r\n\r\n// Services pour les agents actifs\r\nexport const agentService = {\r\n  getDashboard: () => api.get('/actifs/dashboard'),\r\n  getAttestations: () => api.get('/actifs/attestations'),\r\n  requestAttestation: (data) => api.post('/actifs/attestations', data),\r\n  getPrestations: () => api.get('/actifs/prestations'),\r\n  getCotisations: () => api.get('/actifs/cotisations'),\r\n};\r\n\r\n// Services pour les retraités\r\nexport const retraiteService = {\r\n  getDashboard: () => api.get('/retraites/dashboard'),\r\n  getPensionInfo: () => api.get('/retraites/pension'),\r\n  getCertificatsVie: () => api.get('/retraites/certificats-vie'),\r\n  submitCertificatVie: (data) => api.post('/retraites/certificats-vie', data),\r\n  getHistorique: () => api.get('/retraites/historique'),\r\n};\r\n\r\n\r\n// Utilitaires\r\nexport const utils = {\r\n  formatValidationErrors: (errors) => {\r\n    const formattedErrors = {};\r\n    for (const field in errors) {\r\n      formattedErrors[field] = errors[field][0];\r\n    }\r\n    return formattedErrors;\r\n  },\r\n  \r\n  isAuthenticated: () => {\r\n    const token = localStorage.getItem('auth_token');\r\n    return !!token;\r\n  },\r\n  \r\n  getUserData: () => {\r\n    const userData = localStorage.getItem('user_data');\r\n    return userData ? JSON.parse(userData) : null;\r\n  },\r\n  \r\n  setUserData: (userData) => {\r\n    localStorage.setItem('user_data', JSON.stringify(userData));\r\n  },\r\n  \r\n  clearSession: () => {\r\n    localStorage.removeItem('auth_token');\r\n    localStorage.removeItem('setup_token');\r\n    localStorage.removeItem('user_data');\r\n  },\r\n  \r\n  formatPhoneNumber: (phone) => {\r\n    if (!phone) return '';\r\n    const cleaned = phone.replace(/\\D/g, '');\r\n    if (cleaned.length === 8 || cleaned.length === 9) {\r\n      return `+241${cleaned}`;\r\n    }\r\n    return phone;\r\n  },\r\n  \r\n  validateMatriculeSolde: (matricule) => {\r\n    return /^[0-9]{6}[A-Z]$/.test(matricule);\r\n  },\r\n  \r\n  validateNumeroPension: (numero) => {\r\n    return /^[0-9]+$/.test(numero);\r\n  },\r\n  \r\n  formatCurrency: (amount) => {\r\n    if (!amount) return '0 FCFA';\r\n    return new Intl.NumberFormat('fr-FR', {\r\n      style: 'currency',\r\n      currency: 'XAF',\r\n      minimumFractionDigits: 0,\r\n      maximumFractionDigits: 0,\r\n    }).format(amount).replace('XAF', 'FCFA');\r\n  },\r\n  \r\n  formatDate: (date) => {\r\n    if (!date) return '';\r\n    return new Date(date).toLocaleDateString('fr-FR', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n    });\r\n  },\r\n  \r\n  calculateAge: (birthDate) => {\r\n    if (!birthDate) return 0;\r\n    const today = new Date();\r\n    const birth = new Date(birthDate);\r\n    let age = today.getFullYear() - birth.getFullYear();\r\n    const monthDiff = today.getMonth() - birth.getMonth();\r\n    \r\n    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birth.getDate())) {\r\n      age--;\r\n    }\r\n    \r\n    return age;\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}